<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Css tips</title>
      <link href="//2025/09/10/Css-tips/"/>
      <url>//2025/09/10/Css-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="Css-tips"><a href="#Css-tips" class="headerlink" title="Css tips"></a>Css tips</h1><h2 id="To-align-the-input-boxes-with-each-other-and-align-the-label-text-to-the-right-within-the-info-element-you-can-use-the-following-CSS"><a href="#To-align-the-input-boxes-with-each-other-and-align-the-label-text-to-the-right-within-the-info-element-you-can-use-the-following-CSS" class="headerlink" title="To align the input boxes with each other and align the label text to the right within the .info element, you can use the following CSS:"></a>To align the input boxes with each other and align the label text to the right within the .info element, you can use the following CSS:</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block; <span class="comment">/* Align input boxes and labels next to each other */</span></span><br><span class="line">    <span class="attribute">vertical-align</span>: middle; <span class="comment">/* Align vertically if necessary */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right; <span class="comment">/* Align the label&#x27;s text to the right */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>; <span class="comment">/* Optional: Set a fixed width to make the labels consistent */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Smooth-scrolling"><a href="#Smooth-scrolling" class="headerlink" title="Smooth scrolling"></a>Smooth scrolling</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  scroll-behavior: smooth;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Smooth-scrolling-with-media-query"><a href="#Smooth-scrolling-with-media-query" class="headerlink" title="Smooth scrolling with media query"></a>Smooth scrolling with media query</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-reduced-motion</span>: no-preference) &#123;</span><br><span class="line">  * &#123;</span><br><span class="line">    scroll-behavior: smooth;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Align-input-boxes-and-labels-next-to-each-other"><a href="#Align-input-boxes-and-labels-next-to-each-other" class="headerlink" title="Align input boxes and labels next to each other"></a>Align input boxes and labels next to each other</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block; <span class="comment">/* Align input boxes and labels next to each other */</span></span><br><span class="line">    <span class="attribute">vertical-align</span>: middle; <span class="comment">/* Align vertically if necessary */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Cat-ears"><a href="#Cat-ears" class="headerlink" title="Cat ears"></a>Cat ears</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cat-right-ear</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:white;</span><br><span class="line">  <span class="attribute">border-left</span>:<span class="number">35px</span> solid blue;</span><br><span class="line">  <span class="attribute">border-right</span>:<span class="number">35px</span> solid blue;</span><br><span class="line">  <span class="attribute">border-top</span>:<span class="number">35px</span> solid red;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">35px</span> solid red;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Cat-ears-with-transparent-border"><a href="#Cat-ears-with-transparent-border" class="headerlink" title="Cat ears with transparent border"></a>Cat ears with transparent border</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cat-right-ear</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">35px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">35px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">35px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">35px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css visually hide text</title>
      <link href="//2025/09/10/Css-visually%20hide%20text/"/>
      <url>//2025/09/10/Css-visually%20hide%20text/</url>
      
        <content type="html"><![CDATA[<h1 id="Css-visually-hide-text"><a href="#Css-visually-hide-text" class="headerlink" title="Css visually hide text"></a>Css visually hide text</h1><h2 id="visually-hide-text"><a href="#visually-hide-text" class="headerlink" title="visually hide text"></a>visually hide text</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.visually-hidden</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">clip</span>: <span class="built_in">rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">50%</span>);</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="visually-show-text"><a href="#visually-show-text" class="headerlink" title="visually show text"></a>visually show text</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.visually-shown</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="visually-hide-text-with-aria-hidden"><a href="#visually-hide-text-with-aria-hidden" class="headerlink" title="visually hide text with aria-hidden"></a>visually hide text with aria-hidden</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a hidden text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="visually-hide-text-with-aria-label"><a href="#visually-hide-text-with-aria-label" class="headerlink" title="visually hide text with aria-label"></a>visually hide text with aria-label</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-label</span>=<span class="string">&quot;This is a hidden text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a hidden text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="visually-hide-text-with-aria-labelledby"><a href="#visually-hide-text-with-aria-labelledby" class="headerlink" title="visually hide text with aria-labelledby"></a>visually hide text with aria-labelledby</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;hidden-text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hidden-text&quot;</span>&gt;</span>This is a hidden text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="visually-hide-text-with-aria-describedby"><a href="#visually-hide-text-with-aria-describedby" class="headerlink" title="visually hide text with aria-describedby"></a>visually hide text with aria-describedby</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-describedby</span>=<span class="string">&quot;hidden-text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hidden-text&quot;</span>&gt;</span>This is a hidden text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> frontend </tag>
            
            <tag> accessibility </tag>
            
            <tag> aria </tag>
            
            <tag> visually hidden </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ Use</title>
      <link href="//2025/09/08/Csharp-RabbitMq/"/>
      <url>//2025/09/08/Csharp-RabbitMq/</url>
      
        <content type="html"><![CDATA[<h1 id="Add-RabbitMQ-Package"><a href="#Add-RabbitMQ-Package" class="headerlink" title="Add RabbitMQ Package"></a>Add RabbitMQ Package</h1><ul><li>Add <font color="red">RabbitMQ.Client</font> Package (Producer+Consumer)</li></ul><h1 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h1><h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> RabbitMQ.Client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RabbitMQProduct.Controllers</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SenderController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">HttpPost</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Sender([FromForm]<span class="built_in">string</span> content)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> factory = <span class="keyword">new</span> ConnectionFactory()</span><br><span class="line">        &#123;</span><br><span class="line">            HostName = <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">            UserName = <span class="string">&quot;guest&quot;</span>,</span><br><span class="line">            Password = <span class="string">&quot;guest&quot;</span>,</span><br><span class="line">            Port = <span class="number">9091</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">using</span> <span class="keyword">var</span> connection = <span class="keyword">await</span> factory.CreateConnectionAsync();</span><br><span class="line">        <span class="keyword">using</span> <span class="keyword">var</span> channel = <span class="keyword">await</span> connection.CreateChannelAsync();</span><br><span class="line">        <span class="keyword">await</span> channel.QueueDeclareAsync(</span><br><span class="line">            queue: <span class="string">&quot;test_queue&quot;</span>,</span><br><span class="line">            durable: <span class="literal">true</span>,   <span class="comment">// 持久化队列</span></span><br><span class="line">            exclusive: <span class="literal">false</span>,</span><br><span class="line">            autoDelete: <span class="literal">false</span>,</span><br><span class="line">            arguments: <span class="literal">null</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">var</span> body = Encoding.UTF8.GetBytes(content);</span><br><span class="line">        <span class="keyword">var</span> properties = <span class="keyword">new</span> BasicProperties</span><br><span class="line">        &#123;</span><br><span class="line">            DeliveryMode = DeliveryModes.Persistent <span class="comment">// 消息持久化</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">await</span> channel.BasicPublishAsync(</span><br><span class="line">            exchange: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            routingKey: <span class="string">&quot;test_queue&quot;</span>,</span><br><span class="line">            mandatory: <span class="literal">false</span>,</span><br><span class="line">            basicProperties: properties,</span><br><span class="line">            body: body</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Message sent&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h1><h2 id="Background-Class"><a href="#Background-Class" class="headerlink" title="Background Class"></a>Background Class</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"><span class="keyword">using</span> RabbitMQ.Client;</span><br><span class="line"><span class="keyword">using</span> RabbitMQ.Client.Events;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WebApplication1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RabbitMqConsumerService</span> : <span class="title">BackgroundService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ConnectionFactory _factory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RabbitMqConsumerService</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        _factory = <span class="keyword">new</span> ConnectionFactory</span><br><span class="line">        &#123;</span><br><span class="line">            HostName = <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">            Port = <span class="number">9091</span>,          <span class="comment">// RabbitMQ Docker </span></span><br><span class="line">            UserName = <span class="string">&quot;guest&quot;</span>,</span><br><span class="line">            Password = <span class="string">&quot;guest&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">ExecuteAsync</span>(<span class="params">CancellationToken stoppingToken</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">using</span> <span class="keyword">var</span> connection = <span class="keyword">await</span> _factory.CreateConnectionAsync(stoppingToken);</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">using</span> <span class="keyword">var</span> channel = <span class="keyword">await</span> connection.CreateChannelAsync(cancellationToken: stoppingToken);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确保队列存在</span></span><br><span class="line">        <span class="keyword">await</span> channel.QueueDeclareAsync(</span><br><span class="line">            queue: <span class="string">&quot;test_queue&quot;</span>,</span><br><span class="line">            durable: <span class="literal">true</span>,</span><br><span class="line">            exclusive: <span class="literal">false</span>,</span><br><span class="line">            autoDelete: <span class="literal">false</span>,</span><br><span class="line">            arguments: <span class="literal">null</span>,</span><br><span class="line">            cancellationToken: stoppingToken</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> consumer = <span class="keyword">new</span> AsyncEventingBasicConsumer(channel);</span><br><span class="line"></span><br><span class="line">        consumer.ReceivedAsync += <span class="keyword">async</span> (model, ea) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> body = ea.Body.ToArray();               <span class="comment">// ReadOnlyMemory&lt;byte&gt; -&gt; byte[]</span></span><br><span class="line">                <span class="keyword">var</span> message = Encoding.UTF8.GetString(body);</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;[x] Received: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 模拟业务处理</span></span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">500</span>, stoppingToken);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 成功处理后手动确认</span></span><br><span class="line">                <span class="keyword">await</span> channel.BasicAckAsync(ea.DeliveryTag, multiple: <span class="literal">false</span>, cancellationToken: stoppingToken);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;[!] Error processing message: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 异常时拒绝消息</span></span><br><span class="line">                <span class="comment">// requeue = false 表示丢弃，true 表示回队列重试</span></span><br><span class="line">                <span class="keyword">await</span> channel.BasicNackAsync(ea.DeliveryTag, multiple: <span class="literal">false</span>, requeue: <span class="literal">false</span>, cancellationToken: stoppingToken);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开始消费（只调用一次）</span></span><br><span class="line">        <span class="keyword">await</span> channel.BasicConsumeAsync(</span><br><span class="line">            queue: <span class="string">&quot;test_queue&quot;</span>,</span><br><span class="line">            autoAck: <span class="literal">false</span>,        <span class="comment">// 手动确认</span></span><br><span class="line">            consumer: consumer,</span><br><span class="line">            cancellationToken: stoppingToken</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;[*] RabbitMQ Consumer started. Waiting for messages.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 保持后台服务运行</span></span><br><span class="line">        <span class="keyword">await</span> Task.Delay(Timeout.Infinite, stoppingToken);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddHostedService&lt;RabbitMqConsumerService&gt;();</span><br></pre></td></tr></table></figure><h1 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h1><p><img src="https://raw.githubusercontent.com/johnson0405/my-images/main/RabbitMq.svg"></p><ol><li>Producer</li></ol><ul><li><p>Role: The component that creates and sends messages.</p></li><li><p>Example in code: SenderController calling BasicPublishAsync.</p></li><li><p>RabbitMQ concept: Producer publishes messages to an Exchange.</p></li></ul><ol start="2"><li>Exchange</li></ol><ul><li><p>Role: Routes messages from producers to queues based on routing rules (routingKey).</p></li><li><p>Types: Direct, Fanout, Topic, Headers.</p></li><li><p>Default Exchange: “” — a direct exchange where the routingKey equals the queue name.</p></li></ul><ol start="3"><li>Queue</li></ol><ul><li><p>Role: Stores messages until a consumer retrieves them.</p></li><li><p>Durable Queue: Persists even if RabbitMQ restarts.</p></li><li><p>Exclusive &#x2F; AutoDelete: Optional settings controlling access and lifecycle.</p></li></ul><ol start="4"><li>Consumer</li></ol><ul><li><p>Role: Receives messages from a queue and processes them.</p></li><li><p>Example in code: BackgroundService with AsyncEventingBasicConsumer.</p></li></ul><p>Can process messages asynchronously and decide what to do after processing.</p><ol start="5"><li>Message Processing &amp; Acknowledgment</li></ol><ul><li>Process Message: Business logic that handles the message payload.</li></ul><p>Acknowledgment (Ack):</p><ul><li><p>BasicAck: Confirms successful processing; message removed from the queue.</p></li><li><p>BasicNack &#x2F; BasicReject: Signals failure; message can be requeued or discarded.</p></li></ul><ol start="6"><li>Message Flow Summary</li></ol><ul><li><p>Producer → Exchange: Sends a message to RabbitMQ.</p></li><li><p>Exchange → Queue: Routes message based on routing key.</p></li><li><p>Queue → Consumer: Stores message until consumer retrieves it.</p></li><li><p>Consumer → Ack&#x2F;Nack: Confirms successful processing or signals failure.</p></li></ul><ol start="7"><li>Optional Behavior</li></ol><ul><li><p>Requeue &#x3D; true: Message goes back to the queue for retry.</p></li><li><p>Requeue &#x3D; false: Message is discarded.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
            <tag> RabbitMQ </tag>
            
            <tag> Message Queue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Model And Database（EFcore+mysql）</title>
      <link href="//2025/09/05/CSharp-Model%20And%20database/"/>
      <url>//2025/09/05/CSharp-Model%20And%20database/</url>
      
        <content type="html"><![CDATA[<h1 id="Rich-Domain-Model"><a href="#Rich-Domain-Model" class="headerlink" title="Rich Domain Model"></a>Rich Domain Model</h1><h2 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h2><ol><li><p>A property can be read-only or modifiable only within the class itself.<br>To achieve this, define the property’s set accessor as private or use init, and then assign initial values to these properties through the constructor.</p></li><li><p>Define a parameterized constructor.<br>Defination:<br>In EF Core, if an entity class does not have a parameterless constructor, then the names of the parameters in the parameterized constructor must match the property names.</p><ol><li><p>Implementation method 1:<br> Define a parameterless constructor  as private.</p></li><li><p>Implementation method 2:<br> Do not define a parameterless constructor in the entity class, only define meaningful parameterized constructors, but require that the names of the constructor parameters match the property names.</p></li></ol></li><li><p>Mapping member variables (fields) that are not properties to database columns.<br>Implementation:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.Property(<span class="string">&quot;FieldName&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>Read-only properties that obtain their values from database columns.<br>In EF Core, backing fields are provided to support this approach: in the entity configuration code, use HasField(“FieldName”) to configure the property.</p></li><li><p>Some properties do not need to be mapped to database columns and are only used at runtime.<br>Implementation: use Ignore() to configure and exclude this property.</p></li></ol><h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><h3 id="Add-Microsoft-EntityFrameworkCore-Relational-Package"><a href="#Add-Microsoft-EntityFrameworkCore-Relational-Package" class="headerlink" title="Add Microsoft.EntityFrameworkCore.Relational Package."></a>Add <font color="red">Microsoft.EntityFrameworkCore.Relational</font> Package.</h3><h3 id="Add-Pomelo-EntityFrameworkCore-MySql-Package"><a href="#Add-Pomelo-EntityFrameworkCore-MySql-Package" class="headerlink" title="Add Pomelo.EntityFrameworkCore.MySql Package."></a>Add <font color="red">Pomelo.EntityFrameworkCore.MySql</font> Package.</h3><h3 id="Add-Microsoft-EntityFrameworkCore-Tools-Package"><a href="#Add-Microsoft-EntityFrameworkCore-Tools-Package" class="headerlink" title="Add Microsoft.EntityFrameworkCore.Tools Package"></a>Add <font color="red">Microsoft.EntityFrameworkCore.Tools</font> Package</h3><h2 id="In-Model"><a href="#In-Model" class="headerlink" title="In Model"></a>In Model</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * # Principle1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; &#125;<span class="comment">//same with init-only property</span></span><br><span class="line">    <span class="keyword">public</span> DateTime CreateDateTime&#123; <span class="keyword">get</span>; <span class="keyword">init</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UserName &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Credit &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span>? passwordHash;<span class="comment">//Principle3 </span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> remark;<span class="comment">//backing field for Remark property(readonly from database)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Remark &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> remark; &#125; &#125;<span class="comment">//readonly from databasereadonly from database</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Tag &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">User</span>()</span> &#123; &#125;<span class="comment">//for ORM</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.UserName=name;</span><br><span class="line">        <span class="keyword">this</span>.CreateDateTime=DateTime.Now;</span><br><span class="line">        <span class="keyword">this</span>.Credit = <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="comment">//Principle2</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeName</span>(<span class="params"><span class="built_in">string</span> newName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(newName))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;new name is invalid&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.UserName = newName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetPassword</span>(<span class="params"><span class="built_in">string</span> password</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(password) || password.Length &lt; <span class="number">6</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;password is invalid&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.passwordHash = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(password));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserConfig</span>:<span class="title">IEntityTypeConfiguration</span>&lt;<span class="title">User</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;User&gt; builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        builder.ToTable(<span class="string">&quot;M_Users&quot;</span>);</span><br><span class="line">        builder.HasKey(u =&gt; u.Id);</span><br><span class="line">        builder.Property(u =&gt; u.Id).ValueGeneratedOnAdd();</span><br><span class="line">        builder.Property(u =&gt; u.CreateDateTime).IsRequired();</span><br><span class="line">        builder.Property(u =&gt; u.UserName).IsRequired().HasMaxLength(<span class="number">100</span>);</span><br><span class="line">        builder.Property(u =&gt; u.Credit).IsRequired();</span><br><span class="line">        builder.Property&lt;<span class="built_in">string</span>?&gt;(<span class="string">&quot;passwordHash&quot;</span>).HasColumnName(<span class="string">&quot;PasswordHash&quot;</span>).IsRequired(<span class="literal">false</span>); <span class="comment">//shadow property must be configured here</span></span><br><span class="line">        builder.Property(u =&gt; u.Remark).HasMaxLength(<span class="number">500</span>).IsRequired(<span class="literal">false</span>).HasField(<span class="string">&quot;remark&quot;</span>);<span class="comment">//backing field(readonly from database) must be configured here </span></span><br><span class="line">        builder.Ignore(u =&gt; u.Tag);<span class="comment">//ignore Tag property</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="In-Db-Config"><a href="#In-Db-Config" class="headerlink" title="In Db Config"></a>In Db Config</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyDbContext</span> : <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;User&gt; Users &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDbContext</span>(<span class="params">DbContextOptions&lt;MyDbContext&gt; options</span>) : <span class="title">base</span>(<span class="params">options</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnModelCreating(modelBuilder);</span><br><span class="line">        modelBuilder.ApplyConfigurationsFromAssembly(<span class="keyword">this</span>.GetType().Assembly);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="In-program-cs"><a href="#In-program-cs" class="headerlink" title="In program.cs"></a>In program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddDbContext&lt;MyDbContext&gt;(options =&gt;</span><br><span class="line">    options.UseMySql(<span class="string">&quot;server=localhost;user=root;password=123456;database=RichDomain;port=33060&quot;</span>, </span><br><span class="line">    ServerVersion.AutoDetect(<span class="string">&quot;server=localhost;user=root;password=123456;database=RichDomain;port=33060&quot;</span>)));</span><br></pre></td></tr></table></figure><h1 id="In-Controller"><a href="#In-Controller" class="headerlink" title="In Controller"></a>In Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model.Controllers</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> MyDbContext _dbContext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test</span>(<span class="params">MyDbContext dbContext</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _dbContext = dbContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HttpGet</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Hello()</span><br><span class="line">    &#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(name: <span class="string">&quot;Jane Doe&quot;</span>);</span><br><span class="line">        user.SetPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        user.ChangeName(<span class="string">&quot;Jane Smith&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> _ = <span class="keyword">await</span> _dbContext.Users.AddAsync(user);</span><br><span class="line">        <span class="keyword">await</span> _dbContext.SaveChangesAsync();</span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Hello from Rich Domain Model!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#<font color="red">Enum</font></p><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Goods</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Goods</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Goods</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">decimal</span> price, CurrencyName currency</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        Price = price;</span><br><span class="line">        Currency = currency;</span><br><span class="line">        <span class="keyword">this</span>.CreateDateTime=DateTime.Now;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime CreateDateTime &#123; <span class="keyword">get</span>; <span class="keyword">init</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">decimal</span> Price &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> CurrencyName Currency &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> CurrencyName</span><br><span class="line">&#123;</span><br><span class="line">    CNY,</span><br><span class="line">    USD,</span><br><span class="line">    EUR,</span><br><span class="line">    NZD</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="In-Entity-Config"><a href="#In-Entity-Config" class="headerlink" title="In Entity Config"></a>In Entity Config</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GoodConfig</span>:<span class="title">IEntityTypeConfiguration</span>&lt;<span class="title">Goods</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;Goods&gt; builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        builder.ToTable(<span class="string">&quot;M_Goods&quot;</span>);</span><br><span class="line">        builder.HasKey(g =&gt; g.Id);</span><br><span class="line">        builder.Property(g =&gt; g.Id).ValueGeneratedOnAdd();</span><br><span class="line">        builder.Property(g =&gt; g.CreateDateTime).IsRequired();</span><br><span class="line">        builder.Property(g =&gt; g.Name).IsRequired().HasMaxLength(<span class="number">200</span>);</span><br><span class="line">        builder.Property(g =&gt; g.Price).IsRequired().HasColumnType(<span class="string">&quot;decimal(18,2)&quot;</span>);</span><br><span class="line">           <span class="comment">//builder.Property(g =&gt; g.Currency).IsRequired();// Save as 0(CNY) ,1(USD),2(EUR),3(NZD) CNY,</span></span><br><span class="line">        builder.Property(g =&gt; g.Currency).IsRequired().HasConversion&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IN-Controller"><a href="#IN-Controller" class="headerlink" title="IN Controller"></a>IN Controller</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Good()</span><br><span class="line">&#123;</span><br><span class="line">    Goods goods = <span class="keyword">new</span> Goods(name: <span class="string">&quot;Laptop&quot;</span>, price: <span class="number">999.99</span>m, currency: CurrencyName.USD);</span><br><span class="line">    <span class="keyword">var</span> _ = <span class="keyword">await</span> _dbContext.Goods.AddAsync(goods);</span><br><span class="line">    <span class="keyword">await</span> _dbContext.SaveChangesAsync();</span><br><span class="line">    <span class="keyword">return</span> Ok(<span class="string">&quot;Good from Rich Domain Model!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="owned-entity"><a href="#owned-entity" class="headerlink" title="owned entity"></a>owned entity</h1><h2 id="In-Model-1"><a href="#In-Model-1" class="headerlink" title="In Model"></a>In Model</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Shop</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Geo Location &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="In-Owned-Class-Geo-cs"><a href="#In-Owned-Class-Geo-cs" class="headerlink" title="In Owned Class (Geo.cs)"></a>In Owned Class (Geo.cs)</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Geo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Longitude &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Latitude &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Geo</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Geo</span>(<span class="params"><span class="built_in">double</span> longitude, <span class="built_in">double</span> latitude</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (longitude&lt;<span class="number">-180</span>||longitude&gt;<span class="number">180</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;longitude invalid&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (latitude &lt; <span class="number">-180</span> || latitude &gt; <span class="number">180</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;longitude invalid&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Longitude = longitude;</span><br><span class="line">        Latitude = latitude;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="In-Entity-Config-1"><a href="#In-Entity-Config-1" class="headerlink" title="In Entity Config"></a>In Entity Config</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore.Metadata.Builders;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShopConfig</span>:<span class="title">IEntityTypeConfiguration</span>&lt;<span class="title">Shop</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">EntityTypeBuilder&lt;Shop&gt; builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        builder.ToTable(<span class="string">&quot;M_shops&quot;</span>);</span><br><span class="line">        builder.OwnsOne(x =&gt; x.Location, a =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            a.WithOwner();</span><br><span class="line">            a.Property(p =&gt; p.Latitude).HasColumnName(<span class="string">&quot;latitude&quot;</span>);</span><br><span class="line">            a.Property(p =&gt; p.Longitude).HasColumnName(<span class="string">&quot;longitude&quot;</span>);</span><br><span class="line">        &#125;);<span class="comment">//define owned entity</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="In-Controller-1"><a href="#In-Controller-1" class="headerlink" title="In Controller"></a>In Controller</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Shop()</span><br><span class="line">&#123;</span><br><span class="line">    Shop shop = <span class="keyword">new</span> Shop</span><br><span class="line">    &#123;</span><br><span class="line">        Name = <span class="string">&quot;Tech Store&quot;</span>,</span><br><span class="line">        Location = <span class="keyword">new</span> Geo(latitude: <span class="number">37.7749</span>, longitude: <span class="number">-122.4194</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">await</span> _dbContext.Shops.AddAsync(shop);</span><br><span class="line">    <span class="keyword">await</span> _dbContext.SaveChangesAsync();</span><br><span class="line">    <span class="keyword">return</span> Ok(<span class="string">&quot;Shop from Rich Domain Model!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Aggregate-Model"><a href="#Aggregate-Model" class="headerlink" title="Aggregate Model"></a>Aggregate Model</h1><ol><li>In the aggregate root entity, define methods to manage and manipulate all entities contained within the aggregate.</li><li>In the DbContext, only define DbSet properties for aggregate root entities, not for entities within the aggregates.</li><li>External code can access the entities inside an aggregate only via the aggregate root.</li></ol><h2 id="In-Aggregate-root-Model"><a href="#In-Aggregate-root-Model" class="headerlink" title="In Aggregate root Model"></a>In Aggregate root Model</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Order</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime CreateDateTime &#123; <span class="keyword">get</span>; <span class="keyword">init</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> TotalPrice &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span> ; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderDetail&gt; OrderDetails &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;= <span class="keyword">new</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Order</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Order</span>(<span class="params">DateTime createDateTime</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CreateDateTime = createDateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">AddOrderDetail</span>(<span class="params">Goods goods, <span class="built_in">int</span> quantity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (goods == <span class="literal">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(goods));</span><br><span class="line">        <span class="keyword">if</span> (quantity &lt;= <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="keyword">nameof</span>(quantity), <span class="string">&quot;Quantity must be greater than zero.&quot;</span>);</span><br><span class="line">       <span class="built_in">bool</span> detail=OrderDetails.Any(x=&gt;x.goods.Id==goods.Id);</span><br><span class="line">       <span class="keyword">if</span> (detail)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">var</span> existingDetail = OrderDetails.First(x =&gt; x.goods.Id == goods.Id);</span><br><span class="line">           existingDetail.Quantity += quantity;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">var</span> newDetail = <span class="keyword">new</span> OrderDetail</span><br><span class="line">           &#123;</span><br><span class="line">               </span><br><span class="line">               goods = goods,</span><br><span class="line">               Quantity = quantity</span><br><span class="line">           &#125;;</span><br><span class="line">           OrderDetails.Add(newDetail);</span><br><span class="line">       &#125;</span><br><span class="line">       TotalPrice += (<span class="built_in">double</span>)(goods.Price * quantity);</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Entity-inside-Aggregate"><a href="#Entity-inside-Aggregate" class="headerlink" title="Entity inside Aggregate"></a>Entity inside Aggregate</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Rich_Domai_Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OrderDetail</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Order order &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Goods goods &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;<span class="comment">//OK</span></span><br><span class="line">    <span class="comment">// public int goods_id &#123; get; set; &#125;//Better</span></span><br><span class="line">    <span class="comment">// Cross-aggregate references should be made only to aggregate roots,</span></span><br><span class="line">    <span class="comment">// and these references should use the root entity’s ID rather than the root entity object itself, 4</span></span><br><span class="line">    <span class="comment">// to support future microservice decomposition.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Quantity &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Only-add-Dbset-in-Dbcontex"><a href="#Only-add-Dbset-in-Dbcontex" class="headerlink" title="Only add Dbset in Dbcontex"></a>Only add Dbset<Root> in Dbcontex</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> DbSet&lt;Order&gt; Orders &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;<span class="comment">// Only aggregate root in DbContext</span></span><br></pre></td></tr></table></figure><h2 id="In-Controller-2"><a href="#In-Controller-2" class="headerlink" title="In Controller"></a>In Controller</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; AddOrder()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> Order = <span class="keyword">new</span> Order(createDateTime: DateTime.Now) &#123; &#125;;<span class="comment">//Only c</span></span><br><span class="line">    Goods? good = _dbContext.Goods.FirstOrDefault(g =&gt; g.Id == <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> s=Order.AddOrderDetail(good,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">await</span> _dbContext.Orders.AddAsync(Order);</span><br><span class="line">    <span class="keyword">await</span> _dbContext.SaveChangesAsync();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Shop OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Nuget-Console"><a href="#Nuget-Console" class="headerlink" title="Nuget Console"></a>Nuget Console</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">PM&gt; </span><span class="language-bash">Add-Migration Init</span></span><br><span class="line"><span class="meta prompt_">PM&gt; </span><span class="language-bash">Update-Database</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
            <tag> database </tag>
            
            <tag> Model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use JWT</title>
      <link href="//2025/08/28/CSharp-JWT/"/>
      <url>//2025/08/28/CSharp-JWT/</url>
      
        <content type="html"><![CDATA[<h1 id="add-Microsoft-AspNetCore-Authentication-JwtBearer-package"><a href="#add-Microsoft-AspNetCore-Authentication-JwtBearer-package" class="headerlink" title="add Microsoft.AspNetCore.Authentication.JwtBearer package"></a>add <font color="red">Microsoft.AspNetCore.Authentication.JwtBearer</font> package</h1><h1 id="Create-JWTSetting-cs"><a href="#Create-JWTSetting-cs" class="headerlink" title="Create JWTSetting.cs"></a>Create JWTSetting.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Jwt</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JWTSettings</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> SecKey &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> ExpireSeconds &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Add-setting-to-environment-appsettings-json"><a href="#Add-setting-to-environment-appsettings-json" class="headerlink" title="Add setting to environment(appsettings.json)"></a>Add setting to environment(appsettings.json)</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft.AspNetCore&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;JWT&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;SecKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9876hjghfd5e4e4e4!rdryduy@szfsafasfsdfdafsdfasfsadasfasfasfasfasf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ExpireSeconds&quot;</span><span class="punctuation">:</span> <span class="number">3600</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">builder.Services.Configure&lt;JWTSettings&gt;(builder.Configuration.GetSection(<span class="string">&quot;JWT&quot;</span>));</span><br><span class="line">builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(x =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> jwtOpt = builder.Configuration.GetSection(<span class="string">&quot;JWT&quot;</span>).Get&lt;JWTSettings&gt;();</span><br><span class="line">        <span class="built_in">byte</span>[] keyBytes = Encoding.UTF8.GetBytes(jwtOpt.SecKey);</span><br><span class="line">        <span class="keyword">var</span> secKey = <span class="keyword">new</span> SymmetricSecurityKey(keyBytes);</span><br><span class="line">        x.TokenValidationParameters = <span class="keyword">new</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            ValidateIssuer = <span class="literal">false</span>,</span><br><span class="line">            ValidateAudience = <span class="literal">false</span>,</span><br><span class="line">            ValidateLifetime = <span class="literal">true</span>,</span><br><span class="line">            ValidateIssuerSigningKey = <span class="literal">true</span>,</span><br><span class="line">            IssuerSigningKey = secKey</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Add-app-UseAuthentication-BEFORE-app-UseAuthorization"><a href="#Add-app-UseAuthentication-BEFORE-app-UseAuthorization" class="headerlink" title="Add app.UseAuthentication() BEFORE app.UseAuthorization();"></a>Add app.UseAuthentication() <font color="red">BEFORE</font> app.UseAuthorization();</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.UseAuthentication();</span><br><span class="line">app.UseAuthorization();</span><br></pre></td></tr></table></figure><h2 id="In-Controller-to-Generate-token-and-Retun-it"><a href="#In-Controller-to-Generate-token-and-Retun-it" class="headerlink" title="In Controller to Generate token and Retun it"></a>In Controller to <font color="red">Generate</font> token and <font color="red">Retun</font> it</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Http;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.IdentityModel.Tokens;</span><br><span class="line"><span class="keyword">using</span> System.IdentityModel.Tokens.Jwt;</span><br><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Jwt.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> IOptionsSnapshot&lt;JWTSettings&gt; _settings;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">IOptionsSnapshot&lt;JWTSettings&gt; settings</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _settings = settings;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult&lt;<span class="built_in">string</span>&gt; <span class="title">Login</span>(<span class="params">[FromForm] <span class="built_in">string</span> userName, [FromForm] <span class="built_in">string</span> passWord</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (userName == <span class="string">&quot;admin&quot;</span>&amp;&amp; passWord==<span class="string">&quot;123456&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> claims = <span class="keyword">new</span> List&lt;Claim&gt;();</span><br><span class="line">                claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.NameIdentifier, <span class="string">&quot;1&quot;</span>));</span><br><span class="line">                claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.Name,userName));</span><br><span class="line">                claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.Role,<span class="string">&quot;admin&quot;</span>));</span><br><span class="line">                <span class="built_in">string</span> key = _settings.Value.SecKey;</span><br><span class="line">                DateTime expires = DateTime.Now.AddSeconds(_settings.Value.ExpireSeconds);</span><br><span class="line">                <span class="built_in">byte</span>[] secBytes = Encoding.UTF8.GetBytes(key);</span><br><span class="line">                <span class="keyword">var</span> secKey = <span class="keyword">new</span> SymmetricSecurityKey(secBytes);</span><br><span class="line">                <span class="keyword">var</span> credentials = <span class="keyword">new</span> SigningCredentials(secKey, SecurityAlgorithms.HmacSha256Signature);</span><br><span class="line">                <span class="keyword">var</span> tokenDescriptor = <span class="keyword">new</span> JwtSecurityToken(claims: claims,</span><br><span class="line">                    expires: expires, signingCredentials: credentials);</span><br><span class="line">                <span class="built_in">string</span> jwt = <span class="keyword">new</span> JwtSecurityTokenHandler().WriteToken(tokenDescriptor);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> jwt;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> BadRequest(<span class="string">&quot;login error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/** With Identity**/</span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Login2([FromForm] <span class="built_in">string</span> UserName, [FromForm] <span class="built_in">string</span> Password)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">var</span> user = <span class="keyword">await</span> _userManager.FindByNameAsync(UserName);</span><br><span class="line">           <span class="keyword">var</span> check = <span class="keyword">await</span> _userManager.CheckPasswordAsync(user, Password);</span><br><span class="line">           <span class="keyword">if</span> (check)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">var</span> claims = <span class="keyword">new</span> List&lt;Claim&gt;();</span><br><span class="line">               claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.NameIdentifier, Convert.ToString(user.Id)));</span><br><span class="line">               claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.Name, UserName));</span><br><span class="line">               claims.Add(<span class="keyword">new</span> Claim(ClaimTypes.Role, <span class="string">&quot;admin&quot;</span>));</span><br><span class="line">               <span class="built_in">string</span> key = _settings.Value.SecKey;</span><br><span class="line">               DateTime expires = DateTime.Now.AddSeconds(_settings.Value.ExpireSeconds);</span><br><span class="line">               <span class="built_in">byte</span>[] secBytes = Encoding.UTF8.GetBytes(key);</span><br><span class="line">               <span class="keyword">var</span> secKey = <span class="keyword">new</span> SymmetricSecurityKey(secBytes);</span><br><span class="line">               <span class="keyword">var</span> credentials = <span class="keyword">new</span> SigningCredentials(secKey, SecurityAlgorithms.HmacSha256Signature);</span><br><span class="line">               <span class="keyword">var</span> tokenDescriptor = <span class="keyword">new</span> JwtSecurityToken(claims: claims,</span><br><span class="line">                   expires: expires, signingCredentials: credentials);</span><br><span class="line">               <span class="built_in">string</span> jwt = <span class="keyword">new</span> JwtSecurityTokenHandler().WriteToken(tokenDescriptor);</span><br><span class="line"></span><br><span class="line">               <span class="keyword">return</span> jwt;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Check-By-JWT"><a href="#Check-By-JWT" class="headerlink" title="Check By JWT"></a>Check By JWT</h1><h1 id="In-Controller"><a href="#In-Controller" class="headerlink" title="In Controller"></a>In Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Http;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Jwt.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    <span class="comment">//[Authorize]// All Action in this controller needs Login</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test2Controller</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        [<span class="meta">Authorize</span>] <span class="comment">//Only this Action need login</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult&lt;<span class="built_in">string</span>&gt; <span class="title">Hello</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> claim = <span class="keyword">this</span>.User.FindFirst(ClaimTypes.Name);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>+claim.Value;</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        [<span class="meta">AllowAnonymous</span>] <span class="comment">//can use this action without login</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult&lt;<span class="built_in">string</span>&gt; <span class="title">Hello2</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        [<span class="meta">Authorize(Roles = <span class="string">&quot;admin&quot;</span>)</span>]  <span class="comment">//only admin roles can use this action</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult&lt;<span class="built_in">string</span>&gt; <span class="title">Hello3</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Add-token-in-header"><a href="#Add-token-in-header" class="headerlink" title="Add token in header"></a>Add token in header</h1><p>{<br>    Authorization:“Bearer JWTToken”<br>}</p><p><img src="https://i.imgur.com/C30n1OT.png" alt="Logo"></p><h1 id="Add-it-in-swagger"><a href="#Add-it-in-swagger" class="headerlink" title="Add it in swagger"></a>Add it in swagger</h1><h2 id="in-Program-cs"><a href="#in-Program-cs" class="headerlink" title="in Program.cs"></a>in Program.cs</h2><pre><code class="c#">    builder.Services.AddSwaggerGen(        c =&gt;        &#123;            var scheme = new OpenApiSecurityScheme()            &#123;                Description = &quot;Authorization header. \r\nExample: &#39;Bearer 12345abcdef&#39;&quot;,                Reference = new OpenApiReference                &#123;                    Type = ReferenceType.SecurityScheme,                    Id = &quot;Authorization&quot;                &#125;,                Scheme = &quot;oauth2&quot;,                Name = &quot;Authorization&quot;,                In = ParameterLocation.Header,                Type = SecuritySchemeType.ApiKey,            &#125;;            c.AddSecurityDefinition(&quot;Authorization&quot;, scheme);            var requirement = new OpenApiSecurityRequirement();            requirement[scheme] = new List&lt;string&gt;();            c.AddSecurityRequirement(requirement);        &#125;);</code></pre>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use  filter</title>
      <link href="//2025/08/28/CSharp-Use%20Filter/"/>
      <url>//2025/08/28/CSharp-Use%20Filter/</url>
      
        <content type="html"><![CDATA[<h1 id="Create-LogExceptionFilter-cs"><a href="#Create-LogExceptionFilter-cs" class="headerlink" title="Create LogExceptionFilter.cs"></a>Create LogExceptionFilter.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FilterTest</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LogExceptionFilter</span>:<span class="title">IAsyncExceptionFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task <span class="title">OnExceptionAsync</span>(<span class="params">ExceptionContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> File.AppendAllTextAsync(<span class="string">&quot;./error.log&quot;</span>,context.Exception.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-MyExceptionFilter-cs"><a href="#Create-MyExceptionFilter-cs" class="headerlink" title="Create MyExceptionFilter.cs"></a>Create MyExceptionFilter.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FilterTest</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyExceptionFilter</span>:<span class="title">IAsyncExceptionFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IWebHostEnvironment _webHostEnvironment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyExceptionFilter</span>(<span class="params">IWebHostEnvironment webHostEnvironment</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _webHostEnvironment = webHostEnvironment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task <span class="title">OnExceptionAsync</span>(<span class="params">ExceptionContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//context.Exception </span></span><br><span class="line">        <span class="comment">//context.ExceptionHandled</span></span><br><span class="line">        <span class="comment">//context.Result</span></span><br><span class="line">        <span class="built_in">string</span> msg;</span><br><span class="line">        <span class="keyword">if</span> (_webHostEnvironment.IsDevelopment())</span><br><span class="line">        &#123;</span><br><span class="line">            msg = context.Exception.ToString(); <span class="comment">// get Exception info</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            msg = <span class="string">&quot;Server Error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ObjectResult objectResult = <span class="keyword">new</span> ObjectResult(<span class="keyword">new</span> &#123;code=<span class="number">500</span>,message=msg&#125;); <span class="comment">//generate return json</span></span><br><span class="line">        context.Result = objectResult;<span class="comment">//generate return value</span></span><br><span class="line">        context.ExceptionHandled = <span class="literal">true</span>;<span class="comment">//if make this is true the program will stop run other exception</span></span><br><span class="line">        <span class="keyword">return</span> Task.CompletedTask; <span class="comment">//because this is async function</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-MyActionFilter1-cs"><a href="#Create-MyActionFilter1-cs" class="headerlink" title="Create MyActionFilter1.cs"></a>Create MyActionFilter1.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FilterTest</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyActionFilter1</span>:<span class="title">IAsyncActionFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">OnActionExecutionAsync</span>(<span class="params">ActionExecutingContext context, ActionExecutionDelegate next</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;1 start&quot;</span>);</span><br><span class="line">        ActionExecutedContext result = <span class="keyword">await</span> next();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (result.Exception !=  <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;1 error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;1 success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-MyActionFilter2-cs"><a href="#Create-MyActionFilter2-cs" class="headerlink" title="Create MyActionFilter2.cs"></a>Create MyActionFilter2.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.Filters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FilterTest</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyActionFilter2</span>:<span class="title">IAsyncActionFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">async</span> Task <span class="title">OnActionExecutionAsync</span>(<span class="params">ActionExecutingContext context, ActionExecutionDelegate next</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;2 start&quot;</span>);</span><br><span class="line">        ActionExecutedContext result = <span class="keyword">await</span> next();</span><br><span class="line">        <span class="keyword">if</span> (result.Exception != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;2 error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;2 success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.Configure&lt;MvcOptions&gt;(opt =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        opt.Filters.Add&lt;MyExceptionFilter&gt;(); <span class="comment">// this second run </span></span><br><span class="line">        opt.Filters.Add&lt;LogExceptionFilter&gt;(); <span class="comment">//this first run</span></span><br><span class="line">        opt.Filters.Add&lt;MyActionFilter1&gt;();</span><br><span class="line">        opt.Filters.Add&lt;MyActionFilter2&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>flowchart TD<br>    A[Request] –&gt; B[MyExceptionFilter (enter)]<br>    B –&gt; C[LogExceptionFilter (enter)]<br>    C –&gt; D[MyActionFilter1 (enter)]<br>    D –&gt; E[MyActionFilter2 (enter)]<br>    E –&gt; F[Controller Action]</p><pre><code>F --&gt; E2[MyActionFilter2 (exit)]E2 --&gt; D2[MyActionFilter1 (exit)]D2 --&gt; C2[LogExceptionFilter (exit)]C2 --&gt; B2[MyExceptionFilter (exit)]B2 --&gt; G[Response]</code></pre><blockquote><p><font color=red>In</font></p><p>MyExceptionFilter → LogExceptionFilter → MyActionFilter1 → MyActionFilter2 → Controller Action</p></blockquote><blockquote><p><font color=red>Out</font></p><p>Controller Action → MyActionFilter2 → MyActionFilter1 → LogExceptionFilter → MyExceptionFilter</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Fluent Validator</title>
      <link href="//2025/08/27/CSharp-Fluent%20Validator/"/>
      <url>//2025/08/27/CSharp-Fluent%20Validator/</url>
      
        <content type="html"><![CDATA[<h1 id="Add-FluentValidation-AspNetCore-Package"><a href="#Add-FluentValidation-AspNetCore-Package" class="headerlink" title="Add FluentValidation.AspNetCore Package"></a>Add <font color="red">FluentValidation.AspNetCore</font> Package</h1><h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddFluentValidation(opt =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    opt.RegisterValidatorsFromAssembly(Assembly.GetEntryAssembly());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="Create-a-Model-Login2Request-cs"><a href="#Create-a-Model-Login2Request-cs" class="headerlink" title="Create a Model (Login2Request.cs)"></a>Create a Model (Login2Request.cs)</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> 后台服务;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">record</span> <span class="title">Login2Request</span>(<span class="params">String Email,<span class="built_in">string</span> Password,<span class="built_in">string</span> Password2</span>)</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Create-a-validator-Class"><a href="#Create-a-validator-Class" class="headerlink" title="Create a validator Class"></a>Create a validator Class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> FluentValidation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 后台服务;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Login2RequestValidator</span>:<span class="title">AbstractValidator</span>&lt;<span class="title">Login2Request</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Login2RequestValidator</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        RuleFor(x =&gt; x.Email).NotNull().WithMessage(<span class="string">&quot;Not Null&quot;</span>).EmailAddress().Must(v =&gt; v.EndsWith(<span class="string">&quot;outlook.com&quot;</span>) || v.EndsWith(<span class="string">&quot;gmail.com&quot;</span>))</span><br><span class="line">            .WithMessage(<span class="string">&quot;Only Gmail And Outlook Email&quot;</span>);</span><br><span class="line">        RuleFor(x =&gt; x.Password).NotNull().Length(<span class="number">3</span>, <span class="number">10</span>).WithMessage(<span class="string">&quot;Password must between 3 and 10&quot;</span>)</span><br><span class="line">            .Equal(x =&gt; x.Password2).WithMessage(<span class="string">&quot;Password must equal with confirmed Pass&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="use-Validator-In-controller"><a href="#use-Validator-In-controller" class="headerlink" title="use Validator In controller"></a>use Validator In controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 后台服务.<span class="title">Controllers</span>;z</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">HttpPost</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ActionResult&lt;<span class="built_in">string</span>&gt; <span class="title">Login</span>(<span class="params">Login2Request login2</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to get Config And Secrets</title>
      <link href="//2025/08/27/CSharp-Get%20Config%20And%20Secrets/"/>
      <url>//2025/08/27/CSharp-Get%20Config%20And%20Secrets/</url>
      
        <content type="html"><![CDATA[<h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> config = app.Configuration.GetSection(<span class="string">&quot;mysec&quot;</span>).Value;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>In Controller</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IMemoryCache memoryCache;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;TestController&gt; logger;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDistributedCache distributedCache;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration configuration;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">IMemoryCache memoryCache, ILogger&lt;TestController&gt; logger, IDistributedCache distributedCache, IConfiguration configuration</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.memoryCache = memoryCache;</span><br><span class="line">    <span class="keyword">this</span>.logger = logger;</span><br><span class="line">    <span class="keyword">this</span>.distributedCache = distributedCache;</span><br><span class="line">    <span class="keyword">this</span>.configuration = configuration;</span><br><span class="line">&#125;</span><br><span class="line">    [<span class="meta">HttpGet()</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetDemo</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> configuration.GetSection(<span class="string">&quot;mysec&quot;</span>).Value;<span class="comment">//Get value of configuration and secrects</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-secrets"><a href="#Create-secrets" class="headerlink" title="Create secrets"></a>Create secrets</h1><p><img src="https://i.imgur.com/eSmGjv0.png" alt="add secrects"></p>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Use Background Service</title>
      <link href="//2025/08/27/CSharp-Use%20Background%20Service/"/>
      <url>//2025/08/27/CSharp-Use%20Background%20Service/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><figcaption><span>Program.cs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">``` C#</span><br><span class="line">builder.Services.AddHostedService&lt;Hosted&gt;();</span><br></pre></td></tr></table></figure><p>Io Hosted.cs (Normal class)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> 后台服务;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Hosted</span>:<span class="title">BackgroundService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">ExecuteAsync</span>(<span class="params">CancellationToken stoppingToken</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Background started&quot;</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">3000</span>); <span class="comment">//Do nat use sleep</span></span><br><span class="line">            <span class="built_in">string</span> file = <span class="keyword">await</span> File.ReadAllTextAsync(<span class="string">&quot;./test.txt&quot;</span>, stoppingToken);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Read Finished&quot;</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">3000</span>);</span><br><span class="line">            Console.WriteLine(file);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Service Error:&quot;</span>+e.Message);</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Scheduled-Sevice"><a href="#Scheduled-Sevice" class="headerlink" title="Scheduled Sevice"></a>Scheduled Sevice</h1><h2 id="Copy-file-from-Indetity"><a href="#Copy-file-from-Indetity" class="headerlink" title="Copy file from Indetity"></a>Copy file from Indetity</h2><h1 id="IN-program-cs"><a href="#IN-program-cs" class="headerlink" title="IN program.cs"></a>IN program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddHostedService&lt;Scheduled&gt;();</span><br></pre></td></tr></table></figure><h1 id="In-Controller"><a href="#In-Controller" class="headerlink" title="In Controller"></a>In Controller</h1><p><font color="red">Because BackgroundService is a singleton, its lifetime is longer than that of the DbContext(Scoped). Need use IServiceScopeFactory to help you manually create a scope. </font></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Identity;</span><br><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 后台服务;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Scheduled</span>:<span class="title">BackgroundService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IServiceScope _scope;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Scheduled</span>(<span class="params">IServiceScopeFactory serviceScopeFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">this</span>._scope= serviceScopeFactory.CreateScope();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>._scope.Dispose();</span><br><span class="line">        <span class="keyword">base</span>.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">ExecuteAsync</span>(<span class="params">CancellationToken stoppingToken</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (!stoppingToken.IsCancellationRequested)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> dbctx = _scope.ServiceProvider.GetRequiredService&lt;MyDbContext&gt;();</span><br><span class="line"></span><br><span class="line">                <span class="built_in">long</span> c= <span class="keyword">await</span> dbctx.Users.LongCountAsync();</span><br><span class="line">                <span class="keyword">await</span> File.WriteAllTextAsync(<span class="string">&quot;./record.text&quot;</span>,c.ToString());</span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">5000</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(e);</span><br><span class="line">            <span class="keyword">throw</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="If-you-need-scheduled-tasks-for-example-executing-every-day-at-4-AM-use-Hangfire"><a href="#If-you-need-scheduled-tasks-for-example-executing-every-day-at-4-AM-use-Hangfire" class="headerlink" title="If you need scheduled tasks, for example (executing every day at 4 AM), use Hangfire."></a>If you need scheduled tasks, for example (executing every day at 4 AM), use <font font="red">Hangfire</font>.</h1>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Efcore (Mysql)</title>
      <link href="//2025/08/27/CSharp-Use%20Efcore/"/>
      <url>//2025/08/27/CSharp-Use%20Efcore/</url>
      
        <content type="html"><![CDATA[<h1 id="Create-New-project-Name-EFcoreBooks"><a href="#Create-New-project-Name-EFcoreBooks" class="headerlink" title="Create New project Name:EFcoreBooks"></a>Create New project Name:<font color=blue>EFcoreBooks</font></h1><h1 id="Add-Microsoft-EntityFrameworkCore-Relational-Package-In-EFcoreBooks-project"><a href="#Add-Microsoft-EntityFrameworkCore-Relational-Package-In-EFcoreBooks-project" class="headerlink" title="Add Microsoft.EntityFrameworkCore.Relational Package In EFcoreBooks project"></a>Add <font color="red">Microsoft.EntityFrameworkCore.Relational</font> Package In <font color="red">EFcoreBooks</font> project</h1><h1 id="Create-Book-cs"><a href="#Create-Book-cs" class="headerlink" title="Create Book.cs"></a>Create Book.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">EFCoreBooks</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Book</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">long</span> Id &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> AuthorName &#123; <span class="keyword">set</span>;<span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Price &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime PubDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"># Create BookConfig class for save configuration</span></span><br><span class="line">``` c<span class="meta">#</span></span><br><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore.Metadata.Builders;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">EFCoreBooks</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BookConfig</span>:<span class="title">IEntityTypeConfiguration</span>&lt;<span class="title">Book</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">EntityTypeBuilder&lt;Book&gt; builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        builder.ToTable(<span class="string">&quot;T_Books&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Create-MyDbContext-Class-to-save-DbContext"><a href="#Create-MyDbContext-Class-to-save-DbContext" class="headerlink" title="Create MyDbContext Class to save DbContext"></a>Create MyDbContext Class to save DbContext</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">EFCoreBooks</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyDbContext</span>:<span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> DbSet&lt;Book&gt; Books &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnConfiguring</span>(<span class="params">DbContextOptionsBuilder optionsBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnConfiguring(optionsBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">base</span>.OnModelCreating(modelBuilder);</span><br><span class="line">      modelBuilder.ApplyConfigurationsFromAssembly(<span class="keyword">this</span>.GetType().Assembly);<span class="comment">//Get Assembly from current class&#x27;s assembly</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Add-Pomelo-EntityFrameworkCore-MySql-in-Asp-Net-project"><a href="#Add-Pomelo-EntityFrameworkCore-MySql-in-Asp-Net-project" class="headerlink" title="Add Pomelo.EntityFrameworkCore.MySql in Asp.Net project"></a>Add <font color="red">Pomelo.EntityFrameworkCore.MySql</font> in <font color="red">Asp.Net project</font></h1><h1 id="In-ASP-NET-project"><a href="#In-ASP-NET-project" class="headerlink" title="In ASP.NET project"></a>In ASP.NET project</h1><ol><li><p>Right-click on your ASP.NET project in Solution Explorer</p></li><li><p>Choose Add → Project Reference…</p></li><li><p>In the dialog, tick the project you want to reference (for example, MyLibrary)</p></li><li><p>Click OK</p></li></ol><h1 id="In-Controller-Class"><a href="#In-Controller-Class" class="headerlink" title="In Controller Class"></a>In Controller Class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> EFCoreBooks;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 将<span class="title">Efcore</span>隔离.<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> MyDbContext _context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">MyDbContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HttpGet</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Demo1</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="built_in">int</span> c= _context.Books.Count();</span><br><span class="line">       <span class="keyword">return</span> <span class="string">$&quot;c=<span class="subst">&#123;c&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Install-Microsoft-EntityFrameworkCore-Tools-In-EFCoreBooks-Project"><a href="#Install-Microsoft-EntityFrameworkCore-Tools-In-EFCoreBooks-Project" class="headerlink" title="Install  Microsoft.EntityFrameworkCore.Tools In EFCoreBooks Project"></a>Install <font color="color"> Microsoft.EntityFrameworkCore.Tools</font> In <font color="red">EFCoreBooks</font> Project</h1><h1 id="Install-Pomelo-EntityFrameworkCore-MySql-In-EFCoreBooks-Project"><a href="#Install-Pomelo-EntityFrameworkCore-MySql-In-EFCoreBooks-Project" class="headerlink" title="Install  Pomelo.EntityFrameworkCore.MySql In EFCoreBooks Project"></a>Install <font color="color"> Pomelo.EntityFrameworkCore.MySql</font> In <font color="red">EFCoreBooks</font> Project</h1><h1 id="install-dotnet-ef"><a href="#install-dotnet-ef" class="headerlink" title="install dotnet ef"></a>install dotnet ef</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool install --global dotnet-ef</span><br></pre></td></tr></table></figure><h1 id="Migration"><a href="#Migration" class="headerlink" title="Migration"></a>Migration</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd EFCoreBooks</span><br><span class="line">dotnet ef migrations add Init --startup-project ../将Efcore隔离</span><br><span class="line">dotnet ef database update --startup-project ../将Efcore隔离</span><br></pre></td></tr></table></figure><h1 id="TransactionScope"><a href="#TransactionScope" class="headerlink" title="TransactionScope"></a>TransactionScope</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> [<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Demo1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (TransactionScope tx=<span class="keyword">new</span> TransactionScope())</span><br><span class="line">    &#123;</span><br><span class="line">        _context.Books.Add(<span class="keyword">new</span> Book() &#123; AuthorName = <span class="string">&quot;kk&quot;</span>, Name = <span class="string">&quot;Test1&quot;</span>, Price = <span class="number">11.55</span>, PubDate = DateTime.Now &#125;);</span><br><span class="line">        <span class="keyword">var</span> resul1t = _context.SaveChanges(); <span class="comment">//First transaction success</span></span><br><span class="line">        _context.Persons.Add(<span class="keyword">new</span> Person() &#123; Age = <span class="number">200</span>, Name = <span class="string">&quot;Johnson&quot;</span> &#125;);<span class="comment">//second transaction faild (Age is too large)</span></span><br><span class="line">        <span class="keyword">var</span> result = _context.SaveChanges();</span><br><span class="line">        tx.Complete();<span class="comment">//must have complete to submit all transaction</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;<span class="comment">//Rollback Together</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="TransactionScope-Async"><a href="#TransactionScope-Async" class="headerlink" title="TransactionScope Async"></a>TransactionScope Async</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">Demo1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (TransactionScope tx=<span class="keyword">new</span> TransactionScope(TransactionScopeAsyncFlowOption.Enabled))</span><br><span class="line">    &#123;</span><br><span class="line">        _context.Books.Add(<span class="keyword">new</span> Book() &#123; AuthorName = <span class="string">&quot;kk&quot;</span>, Name = <span class="string">&quot;AsyncT&quot;</span>, Price = <span class="number">11.55</span>, PubDate = DateTime.Now &#125;);</span><br><span class="line">        <span class="keyword">var</span> resul1t = <span class="keyword">await</span> _context.SaveChangesAsync();</span><br><span class="line">        _context.Persons.Add(<span class="keyword">new</span> Person() &#123; Age = <span class="number">1</span>, Name = <span class="string">&quot;AsyncJ&quot;</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">await</span> _context.SaveChangesAsync();</span><br><span class="line">        tx.Complete();</span><br><span class="line">        <span class="keyword">return</span> result+resul1t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
            <tag> database </tag>
            
            <tag> Eforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to get EnvironmentName</title>
      <link href="//2025/08/27/CSharp-Get%20EnvironmentName/"/>
      <url>//2025/08/27/CSharp-Get%20EnvironmentName/</url>
      
        <content type="html"><![CDATA[<h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(app.Environment.EnvironmentName);</span><br><span class="line">app.Environment.IsDevelopment()</span><br><span class="line">app.Environment.IsProduction()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#In Controller</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IWebHostEnvironment webHostEnvironment;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test2</span>(<span class="params">IWebHostEnvironment webHostEnvironment</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.webHostEnvironment = webHostEnvironment;</span><br><span class="line">&#125;</span><br><span class="line">   [<span class="meta">HttpGet</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetValue</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> webHostEnvironment.EnvironmentName;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use MediatR</title>
      <link href="//2025/08/27/CSharp-MediatR/"/>
      <url>//2025/08/27/CSharp-MediatR/</url>
      
        <content type="html"><![CDATA[<h1 id="Add-MediatR-Package"><a href="#Add-MediatR-Package" class="headerlink" title="Add MediatR Package"></a>Add <font color="red">MediatR</font> Package</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># In Program.cs</span><br><span class="line"></span><br><span class="line">``` c#</span><br><span class="line">    builder.Services.AddMediatR(opt =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        opt.RegisterServicesFromAssembly(Assembly.GetExecutingAssembly());</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h1 id="Create-a-class-which-implement-INotification"><a href="#Create-a-class-which-implement-INotification" class="headerlink" title="Create a class which implement INotification"></a>Create a class which implement <font color="red">INotification</font></h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> MediatR;</span><br><span class="line"><span class="keyword">using</span> UserMgr.Domain.Entities.ValueObjects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UserMgr.Domain</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">record</span>  <span class="title">UserAccessResultEvent</span>(<span class="params">PhoneNumber PhoneNumber,UserAccessResult result</span>):INotification</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="In-publish-class-inject-IMediator-service"><a href="#In-publish-class-inject-IMediator-service" class="headerlink" title="In publish class inject IMediator service"></a>In publish class inject IMediator service</h1><h1 id="In-Handler"><a href="#In-Handler" class="headerlink" title="In Handler"></a>In Handler</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> MediatR;</span><br><span class="line"><span class="keyword">using</span> UserMgr.Domain;</span><br><span class="line"><span class="keyword">using</span> UserMgr.Infrastrature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Usermgr</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserAccessResultEventHandler</span>:<span class="title">INotificationHandler</span>&lt;<span class="title">UserAccessResultEvent</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> IUserRepository userRepository;</span><br><span class="line">    <span class="keyword">private</span> UserDbContext _userDbContext;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserAccessResultEventHandler</span>(<span class="params">IUserRepository userRepository, UserDbContext userDbContext</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.userRepository = userRepository;</span><br><span class="line">        _userDbContext = userDbContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Handle</span>(<span class="params">UserAccessResultEvent notification, CancellationToken cancellationToken</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> userRepository.AddNewLoginHistoryAsync(notification.PhoneNumber,<span class="string">$&quot;log in result <span class="subst">&#123;notification.result&#125;</span>&quot;</span>);</span><br><span class="line">        _userDbContext.SaveChanges();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="In-Controller"><a href="#In-Controller" class="headerlink" title="In Controller"></a>In Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> MediatR;</span><br><span class="line"><span class="keyword">using</span> MediatRDemo;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MediatRDemo.Controllers</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IMediator _mediator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">IMediator mediator</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _mediator = mediator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Cache</title>
      <link href="//2025/08/26/CSharp-Cache/"/>
      <url>//2025/08/26/CSharp-Cache/</url>
      
        <content type="html"><![CDATA[<h1 id="Cache-in-Browser"><a href="#Cache-in-Browser" class="headerlink" title="Cache in Browser"></a>Cache in Browser</h1><h2 id="In-Controller-file"><a href="#In-Controller-file" class="headerlink" title="In Controller file"></a>In Controller file</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line">[<span class="meta">ResponseCache(Duration = 20)</span>] <span class="comment">/*create cache in browser*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult&lt;DateTime&gt; <span class="title">GetNow</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> DateTime.Now;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Cache-in-Server"><a href="#Cache-in-Server" class="headerlink" title="Cache in Server"></a>Cache in Server</h1><h2 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* MUST After app.UseCors();  */</span></span><br><span class="line">app.UseCors(<span class="string">&quot;AllowReactApp&quot;</span>);</span><br><span class="line">app.UseResponseCaching();</span><br><span class="line">app.MapControllers();</span><br><span class="line"><span class="comment">/*MUST Before  app.MapControllers(); */</span></span><br></pre></td></tr></table></figure><h2 id="In-Controller-File"><a href="#In-Controller-File" class="headerlink" title="In Controller File"></a>In Controller File</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line">[<span class="meta">ResponseCache(Duration = 20)</span>] <span class="comment">/*create cache in browser and server*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult&lt;DateTime&gt; <span class="title">GetNow</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> DateTime.Now;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Use-cache-in-memory"><a href="#Use-cache-in-memory" class="headerlink" title="Use cache in memory"></a>Use cache in memory</h1><h2 id="In-Program-cs-1"><a href="#In-Program-cs-1" class="headerlink" title="In Program.cs"></a>In Program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Other Servces register*/</span></span><br><span class="line"> builder.Services.AddMemoryCache();<span class="comment">/*Register memory cache service*/</span></span><br><span class="line"> <span class="keyword">var</span> app = builder.Build();</span><br></pre></td></tr></table></figure><h2 id="In-Controller-File-1"><a href="#In-Controller-File-1" class="headerlink" title="In Controller File"></a>In Controller File</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">private</span> <span class="keyword">readonly</span> IMemoryCache memoryCache; <span class="comment">//use Cache Service </span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">IMemoryCache memoryCache, ILogger&lt;TestController&gt; logger</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">this</span>.memoryCache = memoryCache; <span class="comment">/*set value to memcache*/</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    [<span class="meta">HttpGet()</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;Book?&gt;&gt; GeyBookId(<span class="built_in">long</span> id)</span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">       <span class="comment">/*GetOrCreateAsync method */</span>   </span><br><span class="line">        Book? result = <span class="keyword">await</span> memoryCache.GetOrCreateAsync(<span class="string">$&quot;Book_<span class="subst">&#123;id&#125;</span>&quot;</span>, </span><br><span class="line">            <span class="keyword">async</span> (e) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/*e.AbsoluteExpirationRelativeToNow=TimeSpan.FromSeconds(40);*/</span></span><br><span class="line">                e.SlidingExpiration=TimeSpan.FromSeconds(<span class="number">10</span>);<span class="comment">//Sliding expiration time =&gt; If this cache is accessed within the time, its lifespan can be extended by 10 seconds. Generally, the absolute expiration time is much longer than the sliding expiration time.</span></span><br><span class="line">                e.AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(Random.Shared.Next(<span class="number">30</span>,<span class="number">50</span>));<span class="comment">//Set a random expiration time to prevent cache avalanche.</span></span><br><span class="line">              </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> MyDnContext.GetBookByIdAsync(id);<span class="comment">//Cache the null cases as well to prevent cache penetration.</span></span><br><span class="line">        &#125;);</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> NotFound(<span class="string">$&quot;找不到<span class="subst">&#123;id&#125;</span>的书&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h1 id="Nget-install-Microsoft-Extensions-Caching-StackExchangeRedis-package"><a href="#Nget-install-Microsoft-Extensions-Caching-StackExchangeRedis-package" class="headerlink" title="Nget install Microsoft.Extensions.Caching.StackExchangeRedis package"></a>Nget install <font color="red">Microsoft.Extensions.Caching.StackExchangeRedis</font> package</h1><h2 id="In-Program-cs-2"><a href="#In-Program-cs-2" class="headerlink" title="In Program.cs"></a>In Program.cs</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddStackExchangeRedisCache(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.Configuration = <span class="string">&quot;127.0.0.1:63793&quot;</span>;</span><br><span class="line">    options.InstanceName = <span class="string">&quot;test_&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="IN-Controller"><a href="#IN-Controller" class="headerlink" title="IN Controller"></a>IN Controller</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;TestController&gt; logger;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">readonly</span> IDistributedCache distributedCache;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params"> ILogger&lt;TestController&gt; logger, IDistributedCache distributedCache</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">this</span>.logger = logger;</span><br><span class="line">       <span class="keyword">this</span>.distributedCache = distributedCache;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   [<span class="meta">HttpGet()</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;Book?&gt;&gt; GeyBookId(<span class="built_in">long</span> id)</span><br><span class="line">&#123;</span><br><span class="line">    logger.LogWarning(<span class="string">$&quot;开始执行GetBookByID,id=<span class="subst">&#123;id&#125;</span>&quot;</span>);</span><br><span class="line">        Book? book;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">await</span> distributedCache.GetStringAsync(<span class="string">$&quot;Book_<span class="subst">&#123;id&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            book = <span class="keyword">await</span> MyDnContext.GetBookByIdAsync(id);</span><br><span class="line">            <span class="keyword">await</span> distributedCache.SetStringAsync(<span class="string">$&quot;Book_<span class="subst">&#123;id&#125;</span>&quot;</span>, JsonSerializer.Serialize(book), <span class="keyword">new</span> DistributedCacheEntryOptions()</span><br><span class="line">            &#123;</span><br><span class="line">                AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(<span class="number">100</span>),</span><br><span class="line">                SlidingExpiration = TimeSpan.FromSeconds(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">           book = JsonSerializer.Deserialize&lt;Book&gt;(result);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        logger.LogWarning(<span class="string">$&quot;GetBookByIdAsync<span class="subst">&#123;result&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (book == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> NotFound(<span class="string">$&quot;找不到<span class="subst">&#123;id&#125;</span>的书&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> book;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to create async function</title>
      <link href="//2025/08/26/CSharp-Create%20Async%20function/"/>
      <url>//2025/08/26/CSharp-Create%20Async%20function/</url>
      
        <content type="html"><![CDATA[<h1 id="In-C-or-Net-class"><a href="#In-C-or-Net-class" class="headerlink" title="In C# or .Net class"></a>In C# or .Net class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyDnContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Task&lt;Book?&gt; GetBookByIdAsync(<span class="built_in">long</span> id) <span class="comment">/*create Async function*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = GetById(id);</span><br><span class="line">        <span class="keyword">return</span> Task.FromResult(result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Book? GetById(<span class="built_in">long</span> id)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Book(<span class="number">0</span>, <span class="string">&quot;零基础去学C语言&quot;</span>);</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Book(<span class="number">1</span>, <span class="string">&quot;J2EE开发全程实录&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Book(<span class="number">2</span>, <span class="string">&quot;程序员SQL今典&quot;</span>);</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to design DDD Pattern</title>
      <link href="//2025/08/26/CSharp-DDD%20Structure/"/>
      <url>//2025/08/26/CSharp-DDD%20Structure/</url>
      
        <content type="html"><![CDATA[<h1 id="Stucture"><a href="#Stucture" class="headerlink" title="Stucture"></a>Stucture</h1><ul><li>Domain:<ol><li>Entity</li><li>Event</li><li>Anti-Corruption Layer (ACL) Interface</li><li>Repository Interface</li><li>Domain Service</li></ol></li><li>Infrasture:<ol><li>Entity Configuration &#x2F; Entity Type Configuration</li><li>DbContext</li><li>Anti-Corruption Layer (ACL) Implementation</li><li>Repository Implementation</li></ol></li><li>WebApi:<ol><li>Controller</li><li>Domain Event Class</li><li>Integration Event Class</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to solve cors in .Net core</title>
      <link href="//2025/08/26/CSharp-Solve%20Cors%20in%20.NET%20core%20webAPI/"/>
      <url>//2025/08/26/CSharp-Solve%20Cors%20in%20.NET%20core%20webAPI/</url>
      
        <content type="html"><![CDATA[<h1 id="ADD-cors-policy-in-Program-cs"><a href="#ADD-cors-policy-in-Program-cs" class="headerlink" title="ADD cors policy in Program.cs"></a>ADD cors policy in Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* other services inject*/</span></span><br><span class="line">     builder.Services.AddCors(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.AddPolicy(<span class="string">&quot;AllowReactApp&quot;</span>,</span><br><span class="line">                    policy =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        policy.WithOrigins(<span class="string">&quot;http://localhost:5173&quot;</span>) <span class="comment">// React </span></span><br><span class="line">                            .AllowAnyHeader()</span><br><span class="line">                            .AllowAnyMethod()</span><br><span class="line">                            .AllowCredentials();<span class="comment">// SignalR need it</span></span><br><span class="line">                    &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="comment">/*other services inject*/</span>            </span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line">app.UseCors(<span class="string">&quot;AllowReactApp&quot;</span>);</span><br><span class="line">app.MapControllers();</span><br><span class="line">app.Run();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
            <tag> CORS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use SignalR</title>
      <link href="//2025/08/26/CSharp-SignalR/"/>
      <url>//2025/08/26/CSharp-SignalR/</url>
      
        <content type="html"><![CDATA[<h1 id="Create-a-class-to-extend-Hub-base-class"><a href="#Create-a-class-to-extend-Hub-base-class" class="headerlink" title="Create a class to extend Hub base class"></a>Create a class to extend Hub base class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.SignalR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SignalR</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HubClass</span>:<span class="title">Hub</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  Task <span class="title">SendPublicMsg</span>(<span class="params"><span class="built_in">string</span> user,<span class="built_in">string</span> msg</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">string</span> connId = <span class="keyword">this</span>.Context.ConnectionId;</span><br><span class="line">       <span class="built_in">string</span> msgSend=<span class="string">$&quot;<span class="subst">&#123;connId&#125;</span>-<span class="subst">&#123;DateTime.Now&#125;</span>-<span class="subst">&#123;msg&#125;</span>:from<span class="subst">&#123;user&#125;</span>&quot;</span>;</span><br><span class="line">       <span class="keyword">return</span> Clients.All.SendCoreAsync(<span class="string">&quot;PublicMsgRecieved&quot;</span>, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; msgSend &#125;);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="In-Programs-cs-Add-hub-service-and-allow-cors"><a href="#In-Programs-cs-Add-hub-service-and-allow-cors" class="headerlink" title="In Programs.cs (Add hub service and allow cors)"></a>In Programs.cs (Add hub service and allow <font color="red">cors</font>)</h1><h1 id="Must-Before-app-MapControllers-use-app-MapHub-“-Hub-ChatRoomHub”"><a href="#Must-Before-app-MapControllers-use-app-MapHub-“-Hub-ChatRoomHub”" class="headerlink" title="Must Before app.MapControllers(); use app.MapHub(“&#x2F;Hub&#x2F;ChatRoomHub”);"></a>Must <font color="red">Before</font> app.MapControllers(); use app.MapHub<HubClass>(“&#x2F;Hub&#x2F;ChatRoomHub”);</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   builder.Services.AddSignalR();</span><br><span class="line">   builder.Services.AddCors(options =&gt;</span><br><span class="line">   &#123;</span><br><span class="line">       options.AddPolicy(<span class="string">&quot;AllowReactApp&quot;</span>,</span><br><span class="line">           policy =&gt;</span><br><span class="line">           &#123;</span><br><span class="line">               policy.WithOrigins(<span class="string">&quot;http://localhost:5173&quot;</span>) <span class="comment">// React 启动的地址</span></span><br><span class="line">                   .AllowAnyHeader()</span><br><span class="line">                   .AllowAnyMethod();</span><br><span class="line">           &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">... other services</span><br><span class="line"></span><br><span class="line">... other use</span><br><span class="line">    app.UseCors(<span class="string">&quot;AllowReactApp&quot;</span>);</span><br><span class="line">     app.MapHub&lt;HubClass&gt;(<span class="string">&quot;/Hub/ChatRoomHub&quot;</span>);</span><br><span class="line"></span><br><span class="line">     app.MapControllers();<span class="comment">//Must before this </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Front-Side"><a href="#Front-Side" class="headerlink" title="Front Side"></a>Front Side</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @microsoft/signalr</span><br></pre></td></tr></table></figure><h1 id="page-src"><a href="#page-src" class="headerlink" title="page.src"></a>page.src</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> signalR <span class="keyword">from</span> <span class="string">&quot;@microsoft/signalr&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [connection, setConnection] = <span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> [connected, setConnected] = <span class="title function_">useState</span>(<span class="literal">false</span>); <span class="comment">// 连接状态</span></span><br><span class="line">    <span class="keyword">const</span> [messages, setMessages] = <span class="title function_">useState</span>([]);</span><br><span class="line">    <span class="keyword">const</span> [input, setInput] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Intital SignalR Connection</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> options=&#123;<span class="attr">skipNegotiation</span>: <span class="literal">true</span>,<span class="attr">transport</span>:signalR.<span class="property">HttpTransportType</span>.<span class="property">WebSockets</span>&#125;;<span class="comment">//Forbid Negotiation</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> newConnection = <span class="keyword">new</span> signalR.<span class="title class_">HubConnectionBuilder</span>()</span><br><span class="line">            .<span class="title function_">withUrl</span>(<span class="string">&quot;https://localhost:7046/Hub/ChatRoomHub&quot;</span>,options)<span class="comment">//Forbid Negotiation</span></span><br><span class="line">            .<span class="title function_">withAutomaticReconnect</span>()</span><br><span class="line">            .<span class="title function_">build</span>();</span><br><span class="line"></span><br><span class="line">        <span class="title function_">setConnection</span>(newConnection);</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动连接并注册事件</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (connection) &#123;</span><br><span class="line">            connection.<span class="title function_">on</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setMessages</span>(<span class="function"><span class="params">prev</span> =&gt;</span> [...prev, msg]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            connection.<span class="title function_">start</span>()</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SignalR Connected&quot;</span>);</span><br><span class="line">                    <span class="title function_">setConnected</span>(<span class="literal">true</span>); <span class="comment">// 连接成功</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Connection failed:&quot;</span>, err));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 清理</span></span><br><span class="line">            <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                connection.<span class="title function_">off</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [connection]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">sendMessage</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!connected) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;Connection not ready yet&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (input.<span class="title function_">trim</span>() === <span class="string">&quot;&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendPublicMsg&quot;</span>, <span class="string">&quot;ReactUser&quot;</span>, input);</span><br><span class="line">            <span class="title function_">setInput</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Send failed:&quot;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">maxWidth:</span> &quot;<span class="attr">600px</span>&quot;, <span class="attr">margin:</span> &quot;<span class="attr">20px</span> <span class="attr">auto</span>&quot;, <span class="attr">fontFamily:</span> &quot;<span class="attr">Arial</span>, <span class="attr">sans-serif</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>React + SignalR Chat<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">border:</span> &quot;<span class="attr">1px</span> <span class="attr">solid</span> #<span class="attr">ccc</span>&quot;, <span class="attr">padding:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">minHeight:</span> &quot;<span class="attr">200px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">overflowY:</span> &quot;<span class="attr">auto</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;messages.map((msg, i) =&gt; (</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span>&#123;msg&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                ))&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">value</span>=<span class="string">&#123;input&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setInput(e.target.value)&#125;</span></span><br><span class="line"><span class="language-xml">                placeholder=&quot;Type message...&quot;</span></span><br><span class="line"><span class="language-xml">                style=&#123;&#123; padding: &quot;5px&quot;, width: &quot;70%&quot;, marginRight: &quot;10px&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onClick</span>=<span class="string">&#123;sendMessage&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">disabled</span>=<span class="string">&#123;!connected&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">5px</span> <span class="attr">15px</span>&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">                Send</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;!connected &amp;&amp; <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">color:</span> &quot;<span class="attr">red</span>&quot; &#125;&#125;&gt;</span>Connecting...<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Add-Distribute-SignalR-server"><a href="#Add-Distribute-SignalR-server" class="headerlink" title="Add Distribute SignalR server"></a>Add Distribute SignalR server</h1><h1 id="Add-Microsoft-AspNetCore-SignalR-StackExchangeRedis-Package"><a href="#Add-Microsoft-AspNetCore-SignalR-StackExchangeRedis-Package" class="headerlink" title="Add Microsoft.AspNetCore.SignalR.StackExchangeRedis Package"></a>Add <font color="red">Microsoft.AspNetCore.SignalR.StackExchangeRedis</font> Package</h1><h1 id="IN-program-cs"><a href="#IN-program-cs" class="headerlink" title="IN program.cs"></a>IN program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//builder.Services.AddSignalR();</span></span><br><span class="line">builder.Services.AddSignalR().AddStackExchangeRedis(<span class="string">&quot;127.0.0.1:63791&quot;</span>,opt =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    opt.Configuration.ChannelPrefix = <span class="string">&quot;SignalR_SignalR_&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="start-Jwt-and-send-message-to-specific-user"><a href="#start-Jwt-and-send-message-to-specific-user" class="headerlink" title="start Jwt and send message to specific user"></a>start Jwt and send message to specific user</h1><h1 id="In-program-cs"><a href="#In-program-cs" class="headerlink" title="In program.cs"></a>In program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// in jwt Builder</span></span><br><span class="line"> builder.Services.Configure&lt;JWTSettings&gt;(builder.Configuration.GetSection(<span class="string">&quot;JWT&quot;</span>));</span><br><span class="line"> builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(x =&gt;</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">var</span> jwtOpt = builder.Configuration.GetSection(<span class="string">&quot;JWT&quot;</span>).Get&lt;JWTSettings&gt;();</span><br><span class="line">         <span class="built_in">byte</span>[] keyBytes = Encoding.UTF8.GetBytes(jwtOpt.SecKey);</span><br><span class="line">         <span class="keyword">var</span> secKey = <span class="keyword">new</span> SymmetricSecurityKey(keyBytes);</span><br><span class="line">         x.TokenValidationParameters = <span class="keyword">new</span>()</span><br><span class="line">         &#123;</span><br><span class="line">             ValidateIssuer = <span class="literal">false</span>,</span><br><span class="line">             ValidateAudience = <span class="literal">false</span>,</span><br><span class="line">             ValidateLifetime = <span class="literal">true</span>,</span><br><span class="line">             ValidateIssuerSigningKey = <span class="literal">true</span>,</span><br><span class="line">             IssuerSigningKey = secKey</span><br><span class="line">         &#125;;</span><br><span class="line">         <span class="comment">/** start SignalR setting **/</span></span><br><span class="line">         x.Events = <span class="keyword">new</span> JwtBearerEvents</span><br><span class="line">         &#123;</span><br><span class="line">             OnMessageReceived = context =&gt;</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">var</span> accessToken = context.Request.Query[<span class="string">&quot;access_token&quot;</span>];</span><br><span class="line">                 <span class="keyword">var</span> path = context.Request.Path;</span><br><span class="line">                 <span class="keyword">if</span> (path.StartsWithSegments(<span class="string">&quot;/Hub/ChatRoomHub&quot;</span>) &amp;&amp; !String.IsNullOrEmpty(accessToken))</span><br><span class="line">                 &#123;</span><br><span class="line">                     context.Token = accessToken;</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">                 <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure><h1 id="In-HubClass"><a href="#In-HubClass" class="headerlink" title="In HubClass"></a>In HubClass</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Components.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.SignalR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SignalR</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Authorize</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HubClass</span>:<span class="title">Hub</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span>  Task <span class="title">SendPublicMsg</span>(<span class="params"><span class="built_in">string</span> user,<span class="built_in">string</span> msg</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> claim=<span class="keyword">this</span>.Context.User.FindFirst(ClaimTypes.Name);<span class="comment">//Get Name</span></span><br><span class="line">            <span class="built_in">string</span> connId = <span class="keyword">this</span>.Context.ConnectionId; </span><br><span class="line">            <span class="built_in">string</span> msgSend=<span class="string">$&quot;<span class="subst">&#123;connId&#125;</span>-<span class="subst">&#123;DateTime.Now&#125;</span>-<span class="subst">&#123;msg&#125;</span>:from<span class="subst">&#123;user&#125;</span>&amp;Name:<span class="subst">&#123;claim.Value&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> Clients.All.SendCoreAsync(<span class="string">&quot;PublicMsgRecieved&quot;</span>, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; msgSend &#125;);</span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Font-side"><a href="#Font-side" class="headerlink" title="Font side"></a>Font side</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> signalR <span class="keyword">from</span> <span class="string">&quot;@microsoft/signalr&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [connection, setConnection] = <span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> [connected, setConnected] = <span class="title function_">useState</span>(<span class="literal">false</span>); <span class="comment">// 连接状态</span></span><br><span class="line">    <span class="keyword">const</span> [messages, setMessages] = <span class="title function_">useState</span>([]);</span><br><span class="line">    <span class="keyword">const</span> [input, setInput] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [userName, setUserName] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [loginMessage, setLoginMessage] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [userToken, setUserToken] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 SignalR 连接</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!userToken) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">const</span> options=&#123;<span class="attr">skipNegotiation</span>: <span class="literal">true</span>,<span class="attr">transport</span>:signalR.<span class="property">HttpTransportType</span>.<span class="property">WebSockets</span>&#125;;</span><br><span class="line"></span><br><span class="line">        options.<span class="property">accessTokenFactory</span> = <span class="function">()=&gt;</span>userToken;<span class="comment">//add JWTToken</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(options);</span><br><span class="line">        <span class="keyword">const</span> newConnection = <span class="keyword">new</span> signalR.<span class="title class_">HubConnectionBuilder</span>()</span><br><span class="line">            .<span class="title function_">withUrl</span>(<span class="string">&quot;https://localhost:7046/Hub/ChatRoomHub&quot;</span>,options)</span><br><span class="line">            .<span class="title function_">withAutomaticReconnect</span>()</span><br><span class="line">            .<span class="title function_">build</span>();</span><br><span class="line"></span><br><span class="line">        <span class="title function_">setConnection</span>(newConnection);</span><br><span class="line">    &#125;, [userToken]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动连接并注册事件</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (connection) &#123;</span><br><span class="line">            connection.<span class="title function_">on</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setMessages</span>(<span class="function"><span class="params">prev</span> =&gt;</span> [...prev, msg]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            connection.<span class="title function_">start</span>()</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SignalR Connected&quot;</span>);</span><br><span class="line">                    <span class="title function_">setConnected</span>(<span class="literal">true</span>); <span class="comment">// 连接成功</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Connection failed:&quot;</span>, err));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 清理</span></span><br><span class="line">            <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                connection.<span class="title function_">off</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [connection]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">sendMessage</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!connected) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;Connection not ready yet&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (input.<span class="title function_">trim</span>() === <span class="string">&quot;&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendPublicMsg&quot;</span>, <span class="string">&quot;ReactUser&quot;</span>, input);</span><br><span class="line">            <span class="title function_">setInput</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Send failed:&quot;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">loginHandler</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="keyword">if</span>(userName==<span class="literal">null</span>||password==<span class="literal">null</span>||password==<span class="literal">undefined</span>||password.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="title function_">setLoginMessage</span>(<span class="string">&quot;Please enter first name&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&quot;UserName&quot;</span>, userName);</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&quot;Password&quot;</span>, password);</span><br><span class="line">           <span class="keyword">const</span> resp= <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://localhost:7046/api/Test2/Login&quot;</span>, &#123;</span><br><span class="line">               <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">               <span class="attr">body</span>: formData</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Login Response:&quot;</span>, resp);</span><br><span class="line">           <span class="keyword">if</span> (resp.<span class="property">status</span> === <span class="number">200</span>)&#123;</span><br><span class="line">             <span class="comment">// ⬅️ 解析响应体</span></span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Login Response:&quot;</span>, resp);</span><br><span class="line">               <span class="title function_">setUserToken</span>(<span class="keyword">await</span> resp.<span class="title function_">text</span>());<span class="comment">// add JWT To Token</span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">maxWidth:</span> &quot;<span class="attr">600px</span>&quot;, <span class="attr">margin:</span> &quot;<span class="attr">20px</span> <span class="attr">auto</span>&quot;, <span class="attr">fontFamily:</span> &quot;<span class="attr">Arial</span>, <span class="attr">sans-serif</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>React + SignalR Chat<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">border:</span> &quot;<span class="attr">1px</span> <span class="attr">solid</span> #<span class="attr">ccc</span>&quot;, <span class="attr">padding:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">minHeight:</span> &quot;<span class="attr">200px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">overflowY:</span> &quot;<span class="attr">auto</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;messages.map((msg, i) =&gt; (</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span>&#123;msg&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                ))&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">value</span>=<span class="string">&#123;input&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setInput(e.target.value)&#125;</span></span><br><span class="line"><span class="language-xml">                placeholder=&quot;Type message...&quot;</span></span><br><span class="line"><span class="language-xml">                style=&#123;&#123; padding: &quot;5px&quot;, width: &quot;70%&quot;, marginRight: &quot;10px&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onClick</span>=<span class="string">&#123;sendMessage&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">disabled</span>=<span class="string">&#123;!connected&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">5px</span> <span class="attr">15px</span>&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">                Send</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;!connected &amp;&amp; <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">color:</span> &quot;<span class="attr">red</span>&quot; &#125;&#125;&gt;</span>Connecting...<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">mt-4</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;UserName&quot;</span> <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setUserName(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span> <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setPassword(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;loginHandler&#125;</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">bg-blue-950</span>`&#125;&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;loginMessage&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Send-private-Massege"><a href="#Send-private-Massege" class="headerlink" title="Send private Massege"></a>Send private Massege</h1><h2 id="IN-hub"><a href="#IN-hub" class="headerlink" title="IN hub"></a>IN hub</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Components.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.SignalR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SignalR</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Authorize</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HubClass</span>:<span class="title">Hub</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> UserManager&lt;MyUser&gt; _user;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HubClass</span>(<span class="params">UserManager&lt;MyUser&gt; user</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _user = user;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">SendPrivateMsg</span>(<span class="params">String destName, String msg</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            MyUser? user = <span class="keyword">await</span> _user.FindByNameAsync(destName);</span><br><span class="line">            <span class="built_in">long</span> uid = user.Id;</span><br><span class="line">            <span class="keyword">var</span> fromUserName = <span class="keyword">this</span>.Context.UserIdentifier;</span><br><span class="line">            <span class="keyword">await</span> Clients.User(uid.ToString()).SendAsync(<span class="string">&quot;PrivateMsgRecived&quot;</span>, fromUserName,DateTime.Now.ToShortTimeString(), msg);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Font-Side"><a href="#Font-Side" class="headerlink" title="Font Side"></a>Font Side</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> signalR <span class="keyword">from</span> <span class="string">&quot;@microsoft/signalr&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [connection, setConnection] = <span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> [connected, setConnected] = <span class="title function_">useState</span>(<span class="literal">false</span>); <span class="comment">// 连接状态</span></span><br><span class="line">    <span class="keyword">const</span> [messages, setMessages] = <span class="title function_">useState</span>([]);</span><br><span class="line">    <span class="keyword">const</span> [input, setInput] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [privateInput, setPrivateInput] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [destinationUsername, setDestinationUsername] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [userName, setUserName] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [loginMessage, setLoginMessage] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [userToken, setUserToken] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 SignalR 连接</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!userToken) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">const</span> options=&#123;<span class="attr">skipNegotiation</span>: <span class="literal">true</span>,<span class="attr">transport</span>:signalR.<span class="property">HttpTransportType</span>.<span class="property">WebSockets</span>&#125;;</span><br><span class="line"></span><br><span class="line">        options.<span class="property">accessTokenFactory</span> = <span class="function">()=&gt;</span>userToken;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(options);</span><br><span class="line">        <span class="keyword">const</span> newConnection = <span class="keyword">new</span> signalR.<span class="title class_">HubConnectionBuilder</span>()</span><br><span class="line">            .<span class="title function_">withUrl</span>(<span class="string">&quot;https://localhost:7046/Hub/ChatRoomHub&quot;</span>,options)</span><br><span class="line">            .<span class="title function_">withAutomaticReconnect</span>()</span><br><span class="line">            .<span class="title function_">build</span>();</span><br><span class="line"></span><br><span class="line">        <span class="title function_">setConnection</span>(newConnection);</span><br><span class="line">    &#125;, [userToken]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动连接并注册事件</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (connection) &#123;</span><br><span class="line">            connection.<span class="title function_">on</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setMessages</span>(<span class="function"><span class="params">prev</span> =&gt;</span> [...prev, msg]);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//add private reciever</span></span><br><span class="line">            connection.<span class="title function_">on</span>(<span class="string">&quot;PrivateMsgRecived&quot;</span>, <span class="function">(<span class="params">fromName,time,msg</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setMessages</span>(<span class="function"><span class="params">prev</span> =&gt;</span> [...prev, <span class="string">`User <span class="subst">$&#123;fromName&#125;</span> at <span class="subst">$&#123;time&#125;</span> send <span class="subst">$&#123;msg&#125;</span>`</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            connection.<span class="title function_">start</span>()</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SignalR Connected&quot;</span>);</span><br><span class="line">                    <span class="title function_">setConnected</span>(<span class="literal">true</span>); <span class="comment">// 连接成功</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Connection failed:&quot;</span>, err));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 清理</span></span><br><span class="line">            <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                connection.<span class="title function_">off</span>(<span class="string">&quot;PublicMsgRecieved&quot;</span>);</span><br><span class="line">                connection.<span class="title function_">off</span>(<span class="string">&quot;PrivateMsgRecived&quot;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [connection]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">sendMessage</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!connected) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;Connection not ready yet&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (input.<span class="title function_">trim</span>() === <span class="string">&quot;&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendPublicMsg&quot;</span>, <span class="string">&quot;ReactUser&quot;</span>, input);</span><br><span class="line">            <span class="title function_">setInput</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Send failed:&quot;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">sendPrivateMessage</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!connected) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;Connection not ready yet&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (privateInput.<span class="title function_">trim</span>() === <span class="string">&quot;&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendPrivateMsg&quot;</span>,  destinationUsername,  privateInput);</span><br><span class="line">            <span class="title function_">setPrivateInput</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Send failed:&quot;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">loginHandler</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="keyword">if</span>(userName==<span class="literal">null</span>||password==<span class="literal">null</span>||password==<span class="literal">undefined</span>||password.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="title function_">setLoginMessage</span>(<span class="string">&quot;Please enter first name&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&quot;UserName&quot;</span>, userName);</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&quot;Password&quot;</span>, password);</span><br><span class="line">           <span class="keyword">const</span> resp= <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://localhost:7046/api/Test2/Login&quot;</span>, &#123;</span><br><span class="line">               <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">               <span class="attr">body</span>: formData</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Login Response:&quot;</span>, resp);</span><br><span class="line">           <span class="keyword">if</span> (resp.<span class="property">status</span> === <span class="number">200</span>)&#123;</span><br><span class="line">             <span class="comment">// ⬅️ 解析响应体</span></span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Login Response:&quot;</span>, resp);</span><br><span class="line">               <span class="title function_">setUserToken</span>(<span class="keyword">await</span> resp.<span class="title function_">text</span>());</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">maxWidth:</span> &quot;<span class="attr">600px</span>&quot;, <span class="attr">margin:</span> &quot;<span class="attr">20px</span> <span class="attr">auto</span>&quot;, <span class="attr">fontFamily:</span> &quot;<span class="attr">Arial</span>, <span class="attr">sans-serif</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>React + SignalR Chat<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">border:</span> &quot;<span class="attr">1px</span> <span class="attr">solid</span> #<span class="attr">ccc</span>&quot;, <span class="attr">padding:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">minHeight:</span> &quot;<span class="attr">200px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">overflowY:</span> &quot;<span class="attr">auto</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;messages.map((msg, i) =&gt; (</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span>&#123;msg&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                ))&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">value</span>=<span class="string">&#123;input&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setInput(e.target.value)&#125;</span></span><br><span class="line"><span class="language-xml">                placeholder=&quot;Type message...&quot;</span></span><br><span class="line"><span class="language-xml">                style=&#123;&#123; padding: &quot;5px&quot;, width: &quot;70%&quot;, marginRight: &quot;10px&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onClick</span>=<span class="string">&#123;sendMessage&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">disabled</span>=<span class="string">&#123;!connected&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">5px</span> <span class="attr">15px</span>&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">                Send</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;!connected &amp;&amp; <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">10px</span>&quot;, <span class="attr">color:</span> &quot;<span class="attr">red</span>&quot; &#125;&#125;&gt;</span>Connecting...<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">mt-4</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;UserName&quot;</span> <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setUserName(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span> <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setPassword(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;loginHandler&#125;</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">bg-blue-950</span>`&#125;&gt;</span>Login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;loginMessage&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;userToken &amp;&amp;</span></span><br><span class="line"><span class="language-xml">                ( <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">mt-4</span>`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&#123;destinationUsername&#125;</span> <span class="attr">placeholder</span>=<span class="string">&#123;</span>&quot;<span class="attr">Destination</span> <span class="attr">User</span> <span class="attr">name</span>&quot;&#125; <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setDestinationUsername(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&#123;privateInput&#125;</span> <span class="attr">placeholder</span>=<span class="string">&#123;</span>&quot;<span class="attr">Private</span> <span class="attr">Massage</span>&quot;&#125; <span class="attr">onChange</span>=<span class="string">&#123;e</span> =&gt;</span> setPrivateInput(e.target.value)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;sendPrivateMessage&#125;</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">bg-blue-950</span>`&#125;&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span>)</span></span><br><span class="line"><span class="language-xml">            &#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="send-Massege-from-Controller"><a href="#send-Massege-from-Controller" class="headerlink" title="send Massege from Controller"></a>send Massege from Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test2</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> UserManager&lt;MyUser&gt; _userManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> RoleManager&lt;MyRole&gt; _roleManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IOptionsSnapshot&lt;JWTSettings&gt; _settings;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IHubContext&lt;HubClass&gt; _hubContext;<span class="comment">// Inject IhubContext</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test2</span>(<span class="params">UserManager&lt;MyUser&gt; userManager, RoleManager&lt;MyRole&gt; roleManager, IOptionsSnapshot&lt;JWTSettings&gt; settings, IHubContext&lt;HubClass&gt; hubContext</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _userManager = userManager;</span><br><span class="line">        _roleManager = roleManager;</span><br><span class="line">        _settings = settings;</span><br><span class="line">        _hubContext = hubContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HttpPost</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; CreateUSer([FromForm] <span class="built_in">string</span> userName, [FromForm] <span class="built_in">string</span> password)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">await</span> _roleManager.RoleExistsAsync(<span class="string">&quot;admin&quot;</span>) == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            MyRole role = <span class="keyword">new</span> MyRole() &#123; Name = <span class="string">&quot;admin&quot;</span> &#125;;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="keyword">await</span> _roleManager.CreateAsync(role);</span><br><span class="line">            <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Create Async error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MyUser user1 = <span class="keyword">await</span> _userManager.FindByNameAsync(userName);</span><br><span class="line">        <span class="keyword">if</span> (user1 == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            user1 = <span class="keyword">new</span> MyUser() &#123; UserName = userName &#125;;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="keyword">await</span> _userManager.CreateAsync(user1, password);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Create User Error&quot;</span>+result.Errors);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">await</span> _userManager.IsInRoleAsync(user1, <span class="string">&quot;admin&quot;</span>) == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="keyword">await</span> _userManager.AddToRoleAsync(user1, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Add role User Error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> _hubContext.Clients.All.SendAsync(<span class="string">&quot;CreateUser&quot;</span>, <span class="string">$&quot;Welcome <span class="subst">&#123;user1.UserName&#125;</span> to our world&quot;</span>,</span><br><span class="line">            DateTime.Now.ToShortTimeString()); <span class="comment">//Use Hub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Ok&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use DI inject services In Controller</title>
      <link href="//2025/08/26/CSharp-Use%20DI%20inject%20services%20In%20Controller/"/>
      <url>//2025/08/26/CSharp-Use%20DI%20inject%20services%20In%20Controller/</url>
      
        <content type="html"><![CDATA[<h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddOpenApi();<span class="comment">/*Register some services to program*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="IN-Controller"><a href="#IN-Controller" class="headerlink" title="IN Controller"></a>IN Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">readonly</span> IMemoryCache memoryCache;<span class="comment">/*create readonly private property*/</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;TestController&gt; logger;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">TestController</span>(<span class="params">IMemoryCache memoryCache, ILogger&lt;TestController&gt; logger</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">this</span>.memoryCache = memoryCache; <span class="comment">/*give it value in constructor*/</span></span><br><span class="line">      <span class="keyword">this</span>.logger = logger;</span><br><span class="line">  &#125;</span><br><span class="line">  [<span class="meta">HttpGet()</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;Book?&gt;&gt; GeyBookId(<span class="built_in">long</span> id)</span><br><span class="line">&#123;</span><br><span class="line">  logger.LogWarning(<span class="string">$&quot;开始执行GetBookByID,id=<span class="subst">&#123;id&#125;</span>&quot;</span>);<span class="comment">/*use logger services*/</span></span><br><span class="line">  Book? result = <span class="keyword">await</span> memoryCache.GetOrCreateAsync(<span class="string">$&quot;Book_<span class="subst">&#123;id&#125;</span>&quot;</span>, </span><br><span class="line">     <span class="keyword">async</span> (e) =&gt;</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">/*e.AbsoluteExpirationRelativeToNow=TimeSpan.FromSeconds(40);*/</span></span><br><span class="line">         e.SlidingExpiration=TimeSpan.FromSeconds(<span class="number">10</span>);</span><br><span class="line">         e.AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(Random.Shared.Next(<span class="number">30</span>,<span class="number">50</span>));<span class="comment">//Set a random expire time to rotect Cache Avalanche</span></span><br><span class="line">         logger.LogWarning(<span class="string">$&quot;缓存没找到，去数据库里找,id=<span class="subst">&#123;id&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">await</span> MyDnContext.GetBookByIdAsync(id);</span><br><span class="line"> &#125;);<span class="comment">/*use cache services*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to add swagger and swagger UI in .net core WebApi</title>
      <link href="//2025/08/26/CSharp-Add%20swagger%20and%20swagger%20UI%20in%20.net%20core%20WebApi/"/>
      <url>//2025/08/26/CSharp-Add%20swagger%20and%20swagger%20UI%20in%20.net%20core%20WebApi/</url>
      
        <content type="html"><![CDATA[<h1 id="Nuget-install-“Swashbuckle-AspNetCore”包"><a href="#Nuget-install-“Swashbuckle-AspNetCore”包" class="headerlink" title="Nuget install “Swashbuckle.AspNetCore”包"></a>Nuget install “Swashbuckle.AspNetCore”包</h1><h1 id="In-Program-cs"><a href="#In-Program-cs" class="headerlink" title="In Program.cs"></a>In Program.cs</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/* IN Main function after     builder.Services.AddOpenApi();*/</span></span><br><span class="line">  builder.Services.AddSwaggerGen(options =&gt;</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      options.DescribeAllEnumsAsStrings();</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      options.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo</span><br><span class="line">      &#123;</span><br><span class="line">          Title = <span class="string">&quot;TestSwagger - Catalog HTTP API&quot;</span>,</span><br><span class="line">          Version = <span class="string">&quot;v1&quot;</span>,</span><br><span class="line">          Description = <span class="string">&quot;The Catalog Microservice HTTP API. This is a Data-Driven/CRUD microservice sample&quot;</span></span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">/*Other configure*/</span></span><br><span class="line">   <span class="keyword">if</span> (app.Environment.IsDevelopment())</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  app.MapOpenApi();</span><br><span class="line">  app.UseCors(<span class="string">&quot;AllowReactApp&quot;</span>);</span><br><span class="line"></span><br><span class="line">  app.UseAuthorization();</span><br><span class="line">  app.UseSwagger();</span><br><span class="line">  app.UseSwaggerUI();</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="In-Properties-launchSettings-json"><a href="#In-Properties-launchSettings-json" class="headerlink" title="In .\Properties\launchSettings.json"></a>In .\Properties\launchSettings.json</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*In https */</span></span><br><span class="line">  <span class="string">&quot;https&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;commandName&quot;</span>: <span class="string">&quot;Project&quot;</span>,</span><br><span class="line">    <span class="string">&quot;environmentVariables&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;ASPNETCORE_ENVIRONMENT&quot;</span>: <span class="string">&quot;Development&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;dotnetRunMessages&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;applicationUrl&quot;</span>: <span class="string">&quot;https://localhost:7172;http://localhost:5117&quot;</span>,</span><br><span class="line">    <span class="string">&quot;launchBrowser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;launchUrl&quot;</span>: <span class="string">&quot;swagger&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> swagger </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Identity</title>
      <link href="//2025/08/26/CSharp-use%20Identity/"/>
      <url>//2025/08/26/CSharp-use%20Identity/</url>
      
        <content type="html"><![CDATA[<h1 id="install-Pomelo-EntityFrameworkCore-MySql-Package"><a href="#install-Pomelo-EntityFrameworkCore-MySql-Package" class="headerlink" title="install Pomelo.EntityFrameworkCore.MySql Package"></a>install <font color="red">Pomelo.EntityFrameworkCore.MySql</font> Package</h1><h1 id="install-Microsoft-AspNetCore-Identity-EntityFrameworkCore-Package"><a href="#install-Microsoft-AspNetCore-Identity-EntityFrameworkCore-Package" class="headerlink" title="install Microsoft.AspNetCore.Identity.EntityFrameworkCore Package"></a>install <font color="red">Microsoft.AspNetCore.Identity.EntityFrameworkCore</font> Package</h1><h1 id="Create-MyUser-Class"><a href="#Create-MyUser-Class" class="headerlink" title="Create MyUser Class"></a>Create MyUser Class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Identity</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyUser</span>:<span class="title">IdentityUser</span>&lt;<span class="title">long</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-MyRole-Class"><a href="#Create-MyRole-Class" class="headerlink" title="Create MyRole Class"></a>Create MyRole Class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Identity</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyRole</span>:<span class="title">IdentityRole</span>&lt;<span class="title">long</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-MyDbContext-class"><a href="#Create-MyDbContext-class" class="headerlink" title="Create MyDbContext class"></a>Create MyDbContext class</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity.EntityFrameworkCore;</span><br><span class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Identity</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyDbContext</span>:<span class="title">IdentityDbContext</span>&lt;<span class="title">MyUser</span>, <span class="title">MyRole</span>, <span class="title">long</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDbContext</span>(<span class="params">DbContextOptions&lt;MyDbContext&gt; options</span>):<span class="title">base</span>(<span class="params">options</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Add service in program.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddDbContext&lt;MyDbContext&gt;(opt =&gt;</span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">string</span>? connStr = builder.Configuration.GetConnectionString(<span class="string">&quot;Default&quot;</span>);</span><br><span class="line">        opt.UseMySql(connStr, ServerVersion.AutoDetect(connStr));</span><br><span class="line">        </span><br><span class="line">&#125;);</span><br><span class="line">builder.Services.AddDataProtection();</span><br><span class="line">builder.Services.AddIdentityCore&lt;MyUser&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.Password.RequireDigit = <span class="literal">false</span>;</span><br><span class="line">    options.Password.RequireLowercase = <span class="literal">false</span>;</span><br><span class="line">    options.Password.RequireNonAlphanumeric = <span class="literal">false</span>;</span><br><span class="line">    options.Password.RequireUppercase = <span class="literal">false</span>;</span><br><span class="line">    options.Password.RequiredLength = <span class="number">6</span>;</span><br><span class="line">    options.Tokens.PasswordResetTokenProvider = TokenOptions.DefaultEmailProvider;</span><br><span class="line">    options.Tokens.EmailConfirmationTokenProvider = TokenOptions.DefaultEmailProvider;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> idBuilder = <span class="keyword">new</span> IdentityBuilder(<span class="keyword">typeof</span>(MyUser), <span class="keyword">typeof</span>(MyRole), builder.Services);</span><br><span class="line">idBuilder.AddEntityFrameworkStores&lt;MyDbContext&gt;().AddDefaultTokenProviders().AddRoleManager&lt;RoleManager&lt;MyRole&gt;&gt;()</span><br><span class="line">    .AddUserManager&lt;UserManager&lt;MyUser&gt;&gt;();</span><br></pre></td></tr></table></figure><h1 id="In-appsettings-json"><a href="#In-appsettings-json" class="headerlink" title="In appsettings.json"></a>In appsettings.json</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft.AspNetCore&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ConnectionStrings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;server=localhost;port=33060;user=root;password=123456;database=Identity;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Add-Microsoft-EntityFrameworkCore-ToolsPackgae"><a href="#Add-Microsoft-EntityFrameworkCore-ToolsPackgae" class="headerlink" title="Add Microsoft.EntityFrameworkCore.ToolsPackgae"></a>Add <font color="red">Microsoft.EntityFrameworkCore.Tools</font>Packgae</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet ef migrations add Init --project .\Identity</span><br><span class="line">dotnet ef database update --startup-project ..\Identity</span><br></pre></td></tr></table></figure><h1 id="In-Controller"><a href="#In-Controller" class="headerlink" title="In Controller"></a>In Controller</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Http;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Identity.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> UserManager&lt;MyUser&gt; _userManager;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> RoleManager&lt;MyRole&gt; _roleManager;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Test</span>(<span class="params">UserManager&lt;MyUser&gt; userManager, RoleManager&lt;MyRole&gt; roleManager</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _userManager = userManager;</span><br><span class="line">            _roleManager = roleManager;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; Test1()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">await</span> _roleManager.RoleExistsAsync(<span class="string">&quot;admin&quot;</span>) == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                MyRole role = <span class="keyword">new</span> MyRole() &#123; Name = <span class="string">&quot;admin&quot;</span> &#125;;</span><br><span class="line">                <span class="keyword">var</span> result=<span class="keyword">await</span> _roleManager.CreateAsync(role);</span><br><span class="line">                <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Create Async error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            MyUser user1 = <span class="keyword">await</span> _userManager.FindByNameAsync(<span class="string">&quot;johnson&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (user1==<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                 user1 = <span class="keyword">new</span> MyUser() &#123; UserName = <span class="string">&quot;johnson&quot;</span> &#125;;</span><br><span class="line">                <span class="keyword">var</span> result = <span class="keyword">await</span> _userManager.CreateAsync(user1,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Create User Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">await</span> _userManager.IsInRoleAsync(user1, <span class="string">&quot;admin&quot;</span>) == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> result = <span class="keyword">await</span> _userManager.AddToRoleAsync(user1,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>) <span class="keyword">return</span> BadRequest(<span class="string">&quot;Add role User Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Ok&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Reset-Password"><a href="#Reset-Password" class="headerlink" title="Reset Password"></a>Reset Password</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; SetResetPassword(<span class="built_in">string</span> userName)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> user = <span class="keyword">await</span> _userManager.FindByNameAsync(userName);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> BadRequest(<span class="string">&quot;Not found&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result=<span class="keyword">await</span> _userManager.GeneratePasswordResetTokenAsync(user);</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;User:<span class="subst">&#123;user.UserName&#125;</span>&#x27;s reset Token is <span class="subst">&#123;result&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;<span class="built_in">string</span>&gt;&gt; ChangePassword(<span class="built_in">string</span> userName,[FromForm] <span class="built_in">string</span> token,[FromForm]<span class="built_in">string</span> newPass)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> user = <span class="keyword">await</span> _userManager.FindByNameAsync(userName);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> BadRequest(<span class="string">&quot;Not found&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result=<span class="keyword">await</span> _userManager.ResetPasswordAsync(user, token, newPass);</span><br><span class="line">    <span class="keyword">if</span> (result.Succeeded == <span class="literal">false</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> BadRequest(<span class="string">&quot;Reset Fail&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> .net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> backend </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-05-reactQuery</title>
      <link href="//2024/11/19/React-07-React-Hook-Form/"/>
      <url>//2024/11/19/React-07-React-Hook-Form/</url>
      
        <content type="html"><![CDATA[<h1 id="React-Hook-Form"><a href="#React-Hook-Form" class="headerlink" title="React-Hook-Form"></a>React-Hook-Form</h1><ol><li>install<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-hook-form</span><br></pre></td></tr></table></figure></li><li>useForm<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useForm&#125; <span class="keyword">from</span> <span class="string">&quot;react-hook-form&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useMutation, useQueryClient&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queryClient = <span class="title function_">useQueryClient</span>();</span><br><span class="line"><span class="keyword">const</span> &#123;mutate, isPending&#125; = <span class="title function_">useMutation</span>(&#123;</span><br><span class="line"> <span class="attr">mutationFn</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> axios.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, data);</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">onSuccess</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">   queryClient.<span class="title function_">invalidateQueries</span>(&#123;<span class="attr">queryKey</span>: [<span class="string">&quot;login&quot;</span>]&#125;);</span><br><span class="line">   <span class="title function_">reset</span>();</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">onError</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line"> &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> &#123;register, handleSubmit,reset,getValues,formState&#125; = <span class="title function_">useForm</span>(</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="attr">defaultValues</span>:&#123;</span><br><span class="line">     <span class="attr">name</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">     <span class="attr">password</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">     <span class="attr">age</span>:<span class="number">0</span>,</span><br><span class="line">     <span class="attr">legalAge</span>:<span class="number">0</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> &#123;errors&#125; = formState;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onError</span> = (<span class="params">error</span>) =&gt; &#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">onSubmit</span>=<span class="string">&#123;handleSubmit(onSubmit,onError)&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">input</span> &#123;<span class="attr">...register</span>(&quot;<span class="attr">name</span>&quot;,&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">required:</span>&quot;<span class="attr">This</span> <span class="attr">field</span> <span class="attr">is</span> <span class="attr">required.</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">minLength:</span>&#123;<span class="attr">value:3</span>,<span class="attr">message:</span>&quot;<span class="attr">Minimum</span> <span class="attr">length</span> <span class="attr">is</span> <span class="attr">3.</span>&quot;&#125;, </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">     &#125;)&#125; <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">     &#123;errors?.name?.message &amp;&amp; <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;errors.name.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">input</span> &#123;<span class="attr">...register</span>(&quot;<span class="attr">password</span>&quot;,&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">required:</span>&quot;<span class="attr">This</span> <span class="attr">field</span> <span class="attr">is</span> <span class="attr">required.</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">minLength:</span>&#123;<span class="attr">value:8</span>,<span class="attr">message:</span>&quot;<span class="attr">Minimum</span> <span class="attr">length</span> <span class="attr">is</span> <span class="attr">8.</span>&quot;&#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">     &#125;)&#125; <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> &#123;<span class="attr">...register</span>(&quot;<span class="attr">age</span>&quot;,&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">required:</span>&quot;<span class="attr">This</span> <span class="attr">field</span> <span class="attr">is</span> <span class="attr">required.</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">min:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">value:18</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">message:</span>&quot;<span class="attr">Minimum</span> <span class="attr">age</span> <span class="attr">is</span> <span class="attr">18.</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">max:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">value:65</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">message:</span>&quot;<span class="attr">Maximum</span> <span class="attr">age</span> <span class="attr">is</span> <span class="attr">65.</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">validate:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">isEven:</span> (<span class="attr">value</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">           return value % 2 === 0 ? &quot;Age must be even.&quot; : true;</span></span><br><span class="line"><span class="language-xml">         &#125;</span></span><br><span class="line"><span class="language-xml">       &#125;</span></span><br><span class="line"><span class="language-xml">       &#125;)&#125; id=&quot;age&quot;/&gt;</span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> &#123;<span class="attr">...register</span>(&quot;<span class="attr">legalAge</span>&quot;,&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">required:</span>&quot;<span class="attr">This</span> <span class="attr">field</span> <span class="attr">is</span> <span class="attr">required.</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">       <span class="attr">validate:</span>(<span class="attr">value</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">         return value &gt;= getValues().age ? true : &quot;You must be older than the age.&quot;;</span></span><br><span class="line"><span class="language-xml">       &#125;</span></span><br><span class="line"><span class="language-xml">     &#125;)&#125; id=&quot;legalAge&quot;/&gt;</span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>Reset<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">disabled</span>=<span class="string">&#123;isPending&#125;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li>register<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;register&#125; = <span class="title function_">useForm</span>();</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> &#123;<span class="attr">...register</span>(&quot;<span class="attr">name</span>&quot;)&#125; /&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> react-form </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-05-reactQuery</title>
      <link href="//2024/11/15/React-06-hot-toast/"/>
      <url>//2024/11/15/React-06-hot-toast/</url>
      
        <content type="html"><![CDATA[<h1 id="React-Hot-Toast"><a href="#React-Hot-Toast" class="headerlink" title="React Hot Toast"></a>React Hot Toast</h1><ol><li><p>install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-hot-toast</span><br></pre></td></tr></table></figure></li><li><p>config</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">BrowserRouter</span>, <span class="title class_">Navigate</span>, <span class="title class_">Route</span>, <span class="title class_">Routes</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Dashboard</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Dashboard.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Bookings</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Bookings.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Cabins</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Cabins.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Users</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Users.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Settings</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Settings.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Account</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Account.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Login.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PageNotFound</span> <span class="keyword">from</span> <span class="string">&quot;./pages/PageNotFound.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">GlobalStyles</span> <span class="keyword">from</span> <span class="string">&quot;./styles/GlobalStyles.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AppLayout</span> <span class="keyword">from</span> <span class="string">&quot;./ui/AppLayout.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">QueryClient</span>, <span class="title class_">QueryClientProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">ReactQueryDevtools</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query-devtools&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Toaster</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-hot-toast&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> queryClient=<span class="keyword">new</span> <span class="title class_">QueryClient</span>(&#123;</span><br><span class="line"> <span class="attr">defaultOptions</span>:&#123;</span><br><span class="line">     <span class="attr">queries</span>:&#123;</span><br><span class="line">         <span class="attr">staleTime</span>:<span class="number">0</span><span class="comment">//60 seconds</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">     <span class="keyword">return</span> (</span><br><span class="line">     <span class="language-xml"><span class="tag">&lt;<span class="name">QueryClientProvider</span> <span class="attr">client</span>=<span class="string">&#123;queryClient&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;<span class="name">ReactQueryDevtools</span> <span class="attr">initialIsOpen</span>=<span class="string">&#123;true&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">             <span class="tag">&lt;<span class="name">GlobalStyles</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">             <span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                 <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                     <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">AppLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Navigate</span>  <span class="attr">replace</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;<span class="attr">dashbord</span>&quot;&#125;/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dashbord&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Dashboard</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">bookings</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Bookings</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">cabins</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Cabins</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">users</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Users</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">settings</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Settings</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                         <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">account</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Account</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                     <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                     <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">login</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                     <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">PageNotFound</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                 <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">             <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">             &#123;/* toast init */&#125;</span></span><br><span class="line"><span class="language-xml">             <span class="tag">&lt;<span class="name">Toaster</span> <span class="attr">position</span>=<span class="string">&quot;top-center&quot;</span> <span class="attr">gutter</span>=<span class="string">&#123;12&#125;</span> <span class="attr">containerStyle</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">margin:</span>&quot;<span class="attr">8px</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             <span class="attr">toastOptions</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">success:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">duration:1500</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">error:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">duration:5000</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 &#125;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">style:</span>&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">fontSize:</span>&quot;<span class="attr">16px</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">maxWidth:</span>&quot;<span class="attr">500px</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">padding:</span>&quot;<span class="attr">16px</span> <span class="attr">24px</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">backgroundColor:</span>&quot;<span class="attr">var</span>(<span class="attr">--color-grey-0</span>)&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">color:</span>&quot;<span class="attr">var</span>(<span class="attr">--color-grey-700</span>)&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             &#125;&#125;/&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;/<span class="name">QueryClientProvider</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> )</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>use</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> toast <span class="keyword">from</span> <span class="string">&quot;react-hot-toast&quot;</span>;</span><br><span class="line">toast.<span class="title function_">success</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">toast.<span class="title function_">error</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">toast.<span class="title function_">loading</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">toast.<span class="title function_">info</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">toast.<span class="title function_">warning</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> react-toast </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-03-react-router</title>
      <link href="//2024/11/06/react-04-App-layout/"/>
      <url>//2024/11/06/react-04-App-layout/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Create main layout page</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/ui/AppLayout.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Outlet</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Sidebar</span> <span class="keyword">from</span> <span class="string">&quot;./Sidebar.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&quot;./Header.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Main</span>=styled.<span class="property">main</span><span class="string">`</span></span><br><span class="line"><span class="string">  background-color: var(--color-grey-50);</span></span><br><span class="line"><span class="string">  padding: 4rem 4.8rem 6.4rem;  </span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledAppLayout</span>=styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">display: grid;</span></span><br><span class="line"><span class="string">grid-template-columns: 26rem 1fr;</span></span><br><span class="line"><span class="string">grid-template-rows: auto 1fr;</span></span><br><span class="line"><span class="string">height: 100vh;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">AppLayout</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledAppLayout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Header</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Sidebar</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Outlet</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledAppLayout</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">AppLayout</span></span><br></pre></td></tr></table></figure></li><li><p>Create main sidebar(Nav Link) Page</p><ol><li>install react-icon  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-icons</span><br></pre></td></tr></table></figure></li><li>create sidebar page<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/ui/Sidebar.jsx  </span></span><br><span class="line"> <span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"> <span class="keyword">import</span> <span class="title class_">Logo</span> <span class="keyword">from</span> <span class="string">&quot;./Logo.jsx&quot;</span>;</span><br><span class="line"> <span class="keyword">import</span> <span class="title class_">MainNav</span> <span class="keyword">from</span> <span class="string">&quot;./MainNav.jsx&quot;</span>;</span><br><span class="line"> <span class="keyword">const</span> <span class="title class_">StyledSider</span> = styled.<span class="property">aside</span><span class="string">`</span></span><br><span class="line"><span class="string">   background-color: var(--color-grey-0);</span></span><br><span class="line"><span class="string">   padding: 3.2rem 2.4rem;</span></span><br><span class="line"><span class="string">   border-right: 1px solid var(--color-grey-100);</span></span><br><span class="line"><span class="string">   grid-row:  1/-1;</span></span><br><span class="line"><span class="string">   display: flex;</span></span><br><span class="line"><span class="string">   flex-direction: column;</span></span><br><span class="line"><span class="string">   gap: 3.2rem;</span></span><br><span class="line"><span class="string"> `</span></span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">Sidebar</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">Logo</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">MainNav</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;/<span class="name">StyledSider</span>&gt;</span></span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span>  <span class="title class_">Sidebar</span>;      </span><br></pre></td></tr></table></figure></li></ol></li><li><p>Create Main Nav page</p><pre><code class="js">// src/ui/MainNav.jsximport styled from &quot;styled-components&quot;;import &#123;NavLink&#125; from &quot;react-router-dom&quot;;import &#123; HiOutlineCalendar, HiOutlineCog6Tooth, HiOutlineHome, HiOutlineHomeModern, HiOutlineUsers &#125; from &quot;react-icons/hi2&quot;; const NavList = styled.ul`   display: flex;   flex-direction: column;   gap: 0.8rem; `; const StyledNavLink = styled(NavLink)`   &amp;:link,   &amp;:visited &#123;   display: flex;   align-items: center;   gap: 1.2rem;   color: var(--color-grey-600);   font-size: 1.6rem;   font-weight: 500;   padding: 1.2rem 2.4rem;   transition: all 0.3s;   &#125; /* This works because react-router places the active class on the active NavLink */ &amp;:hover, &amp;:active, &amp;.active:link, &amp;.active:visited &#123;   color: var(--color-grey-800);   background-color: var(--color-grey-50);   border-radius: var(--border-radius-sm); &#125; &amp; svg &#123; width: 2.4rem; height: 2.4rem; color: var(--color-grey-400); transition: all 0.3s; &#125; &amp;:hover svg, &amp;:active svg, &amp;.active:link svg, &amp;.active:visited svg &#123;     color: var(--color-brand-600); &#125; `; const  MainNav=()=&gt;&#123; return &lt;nav&gt;     &lt;NavList&gt;         &lt;li&gt;&lt;StyledNavLink to=&#123;&quot;/dashbord&quot;&#125;&gt;             &lt;HiOutlineHome/&gt;             &lt;span&gt;                 Home             &lt;/span&gt;         &lt;/StyledNavLink&gt;&lt;/li&gt;         &lt;li&gt;&lt;StyledNavLink to=&#123;&quot;/bookings&quot;&#125;&gt;             &lt;HiOutlineCalendar/&gt;             &lt;span&gt;Bookings&lt;/span&gt;         &lt;/StyledNavLink&gt;&lt;/li&gt;         &lt;li&gt;&lt;StyledNavLink to=&#123;&quot;/cabins&quot;&#125;&gt;             &lt;HiOutlineHomeModern/&gt;             &lt;span&gt;Cabins&lt;/span&gt;         &lt;/StyledNavLink&gt;&lt;/li&gt;         &lt;li&gt;&lt;StyledNavLink to=&#123;&quot;/users&quot;&#125;&gt;             &lt;HiOutlineUsers/&gt;             &lt;span&gt;Users&lt;/span&gt;         &lt;/StyledNavLink&gt;&lt;/li&gt;         &lt;li&gt;&lt;StyledNavLink to=&#123;&quot;/settings&quot;&#125;&gt;             &lt;HiOutlineCog6Tooth/&gt;             &lt;span&gt;Settings&lt;/span&gt;         &lt;/StyledNavLink&gt;&lt;/li&gt;     &lt;/NavList&gt; &lt;/nav&gt; &#125; export default MainNav</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> page layout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-05-reactQuery</title>
      <link href="//2024/11/06/react-05-reactQuery/"/>
      <url>//2024/11/06/react-05-reactQuery/</url>
      
        <content type="html"><![CDATA[<h1 id="React-Query"><a href="#React-Query" class="headerlink" title="React Query"></a>React Query</h1><ol><li><p>install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i @tanstack/react-query</span><br><span class="line">npm i @tanstack/react-query-devtools</span><br></pre></td></tr></table></figure></li><li><p>create query client</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/lib/reactQuery.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">QueryClient</span>, <span class="title class_">QueryClientProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> queryClient = <span class="keyword">new</span> <span class="title class_">QueryClient</span>(&#123;</span><br><span class="line">   <span class="attr">defaultOptions</span>: &#123;</span><br><span class="line">      <span class="attr">queries</span>: &#123;</span><br><span class="line">         <span class="attr">staleTime</span>: <span class="number">60</span>*<span class="number">1000</span>,<span class="comment">//1 minute</span></span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> &#123;queryClient, <span class="title class_">QueryClientProvider</span>&#125;;</span><br></pre></td></tr></table></figure></li><li><p>wrap app with query client</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/main.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">QueryClient</span>, <span class="title class_">QueryClientProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">ReactQueryDevtools</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query-devtools&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> queryClient = <span class="keyword">new</span> <span class="title class_">QueryClient</span>();</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">QueryClientProvider</span> <span class="attr">client</span>=<span class="string">&#123;queryClient&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ReactQueryDevtools</span> <span class="attr">initialIsOpen</span>=<span class="string">&#123;false&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">QueryClientProvider</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>useQuery</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/pages/Home.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123;useQuery&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;<span class="attr">data</span>: cabins, isLoading, isError, error&#125; = <span class="title function_">useQuery</span>(&#123;</span><br><span class="line">   <span class="attr">queryKey</span>: [<span class="string">&quot;cabins&quot;</span>],</span><br><span class="line">   <span class="attr">queryFn</span>: <span class="function">() =&gt;</span> <span class="title function_">getCabins</span>(),<span class="comment">//need return promise</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>useMutation</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/pages/Home.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123;useMutation&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> toast <span class="keyword">from</span> <span class="string">&quot;react-hot-toast&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;useQueryClient&#125; <span class="keyword">from</span> <span class="string">&quot;@tanstack/react-query&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> queryClient = <span class="title function_">useQueryClient</span>();</span><br><span class="line"><span class="keyword">const</span> &#123;mutate, isPending, isError, error&#125; = <span class="title function_">useMutation</span>(&#123;</span><br><span class="line">   <span class="attr">mutationFn</span>: <span class="function">(<span class="params">cabinId</span>)=&gt;</span><span class="title function_">deleteCabin</span>(cabinId),</span><br><span class="line">   <span class="attr">onSuccess</span>: <span class="function">()=&gt;</span>queryClient.<span class="title function_">invalidateQueries</span>(&#123;<span class="attr">queryKey</span>: [<span class="string">&quot;cabins&quot;</span>]&#125;),</span><br><span class="line">   <span class="attr">onError</span>: <span class="function">()=&gt;</span>toast.<span class="title function_">error</span>(<span class="string">&quot;Failed to delete cabin&quot;</span>),</span><br><span class="line">   </span><br><span class="line">&#125;);</span><br><span class="line">onSubmit=&#123;<span class="title function_">mutate</span>(&#123;<span class="attr">cabinId</span>: cabin.<span class="property">id</span>&#125;)&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> reactQuery </tag>
            
            <tag> toast </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-03-react-router</title>
      <link href="//2024/11/06/react-03-react-router/"/>
      <url>//2024/11/06/react-03-react-router/</url>
      
        <content type="html"><![CDATA[<h1 id="React-Router"><a href="#React-Router" class="headerlink" title="React Router"></a>React Router</h1><ol><li><p>install react-router</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-router-dom</span><br></pre></td></tr></table></figure></li><li><p>create route in App.js</p>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//in src/App.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">BrowserRouter</span>, <span class="title class_">Route</span>, <span class="title class_">Routes</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Dashboard</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Dashboard.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Bookings</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Bookings.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Cabins</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Cabins.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Users</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Users.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Settings</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Settings.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Account</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Account.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Login.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PageNotFound</span> <span class="keyword">from</span> <span class="string">&quot;./pages/PageNotFound.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">GlobalStyles</span> <span class="keyword">from</span> <span class="string">&quot;./styles/GlobalStyles.jsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GlobalStyles</span> /&gt;</span> //use global styled compoments</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">AppLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Navigate</span>  <span class="attr">replace</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;<span class="attr">dashbord</span>&quot;&#125;/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dashbord&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Dashboard</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">bookings</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Bookings</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">cabins</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Cabins</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">users</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Users</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">settings</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Settings</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">account</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Account</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;<span class="attr">login</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">PageNotFound</span>/&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      </span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">     </span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> react-router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-02-styled-component</title>
      <link href="//2024/11/06/react-02-styled-components/"/>
      <url>//2024/11/06/react-02-styled-components/</url>
      
        <content type="html"><![CDATA[<h1 id="Styled-Components"><a href="#Styled-Components" class="headerlink" title="Styled Components"></a>Styled Components</h1><ol><li><p>install styled-components</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i styled-components</span><br></pre></td></tr></table></figure></li><li><p>basic usage</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/App.js</span></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">H1</span> =styled.<span class="property">h1</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size:30px;</span></span><br><span class="line"><span class="string">  font-weight: 600;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="keyword">const</span>  <span class="title class_">Button</span> =styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size:1.4rem;</span></span><br><span class="line"><span class="string">  padding: 1.2rem 1.6rem;</span></span><br><span class="line"><span class="string">  font-weight: 500;</span></span><br><span class="line"><span class="string">  border:none;</span></span><br><span class="line"><span class="string">  border-radius: 7px;</span></span><br><span class="line"><span class="string">  background-color: purple;</span></span><br><span class="line"><span class="string">  color: white;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Input</span>=styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">  border:1px solid #ddd;</span></span><br><span class="line"><span class="string">  border-radius: 5px;</span></span><br><span class="line"><span class="string">  padding: 0.8rem 1.2rem;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">APP</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">H1</span>&gt;</span>The Wild Oasis<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span>=&gt;</span>alert(111)&#125;&gt;Check In<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input</span> <span class="attr">type</span>=<span class="string">&#123;</span>&quot;<span class="attr">number</span>&quot;&#125;&gt;</span><span class="tag">&lt;/<span class="name">Input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">default</span>  <span class="variable constant_">APP</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>global style</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/styles/GlobalStyles.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createGlobalStyle &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GlobalStyles</span> = createGlobalStyle<span class="string">`</span></span><br><span class="line"><span class="string">  *&#123;</span></span><br><span class="line"><span class="string">    margin:0;</span></span><br><span class="line"><span class="string">    padding:0;</span></span><br><span class="line"><span class="string">    box-sizing: border-box;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  :root &#123;</span></span><br><span class="line"><span class="string">    --color-brand-500: #6366f1;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/App.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">GlobalStyles</span> <span class="keyword">from</span> <span class="string">&quot;./styles/GlobalStyles.js&quot;</span>;</span><br><span class="line"><span class="keyword">const</span>  <span class="title class_">Button</span> =styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">    font-size:1.4rem;</span></span><br><span class="line"><span class="string">    padding: 1.2rem 1.6rem;</span></span><br><span class="line"><span class="string">    font-weight: 500;</span></span><br><span class="line"><span class="string">    border:none;</span></span><br><span class="line"><span class="string">    border-radius: 7px;</span></span><br><span class="line"><span class="string">    background-color: var(--color-brand-500);</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">APP</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GlobalStyles</span>/&gt;</span> //add here</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledApp</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">H1</span>&gt;</span>The Wild Oasis<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span>=&gt;</span>alert(111)&#125;&gt;Check In<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Input</span> <span class="attr">type</span>=<span class="string">&#123;</span>&quot;<span class="attr">number</span>&quot;&#125;&gt;</span><span class="tag">&lt;/<span class="name">Input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">StyledApp</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line"></span><br><span class="line">   )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">default</span>  <span class="variable constant_">APP</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>use styled component in other component</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/ui/Input.jsx</span></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Input</span>=styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">  border:1px solid var(--color-grey-300);</span></span><br><span class="line"><span class="string">  background-color: var(--color-grey-0);</span></span><br><span class="line"><span class="string">  border-radius: var(--border-radius-sm);</span></span><br><span class="line"><span class="string">  padding: 0.8rem 1.2rem;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    background-color: var(--color-brand-700);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">default</span> <span class="title class_">Input</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/App.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;./ui/Input.jsx&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">APP</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Input</span> <span class="attr">type</span>=<span class="string">&#123;</span>&quot;<span class="attr">number</span>&quot;&#125;&gt;</span><span class="tag">&lt;/<span class="name">Input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/&gt;</span></span></span><br><span class="line"></span><br><span class="line">   )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">export</span>  <span class="keyword">default</span>  <span class="variable constant_">APP</span></span><br></pre></td></tr></table></figure></li><li><p>styled component with props</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//in src/ui/Heading.jsx</span></span><br><span class="line"><span class="keyword">import</span> styled, &#123;css&#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> <span class="title class_">Heading</span> =styled.<span class="property">h1</span><span class="string">`</span></span><br><span class="line"><span class="string"> <span class="subst">$&#123;props =&gt; props.<span class="keyword">as</span>===<span class="string">&quot;h1&quot;</span> &amp;&amp; </span></span></span><br><span class="line"><span class="subst"><span class="string">     css <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-size:3rem;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-weight: 600;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">     `</span></span></span></span><br><span class="line"><span class="subst"><span class="string"> &#125;</span></span></span><br><span class="line"><span class="string"> <span class="subst">$&#123;props =&gt; props.<span class="keyword">as</span>===<span class="string">&quot;h2&quot;</span> &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">         css <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-size:2rem;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-weight: 600;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">     `</span></span></span></span><br><span class="line"><span class="subst"><span class="string"> &#125;</span></span></span><br><span class="line"><span class="string"> <span class="subst">$&#123;props =&gt; props.<span class="keyword">as</span>===<span class="string">&quot;h3&quot;</span> &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">         css <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-size:2rem;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">         font-weight: 500;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">     `</span></span></span></span><br><span class="line"><span class="subst"><span class="string"> &#125;</span></span></span><br><span class="line"><span class="string"> line-height: 1.4;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> `</span></span><br><span class="line"> <span class="comment">//add as props</span></span><br><span class="line"> <span class="title class_">Heading</span>.<span class="property">defaultProps</span> = &#123;</span><br><span class="line">   <span class="attr">as</span>: <span class="string">&#x27;h1&#x27;</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Heading</span>; </span><br></pre></td></tr></table></figure><pre><code class="js"> // in src/App.jsx import Heading from &quot;./ui/Heading.jsx&quot;; const APP = () =&gt; &#123;   return (     &lt;Heading as=&quot;h1&quot;&gt;H1&lt;/Heading&gt;     &lt;Heading as=&quot;h2&quot;&gt;H2&lt;/Heading&gt;     &lt;Heading as=&quot;h3&quot;&gt;H3&lt;/Heading&gt;   ) &#125;</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
            <tag> styled-components </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-01-application_plan</title>
      <link href="//2024/11/06/react-01-application_plan/"/>
      <url>//2024/11/06/react-01-application_plan/</url>
      
        <content type="html"><![CDATA[<h1 id="Application-Plan"><a href="#Application-Plan" class="headerlink" title="Application Plan"></a>Application Plan</h1><h2 id="Appliciton-Title"><a href="#Appliciton-Title" class="headerlink" title="Appliciton Title"></a>Appliciton Title</h2><blockquote><p>The Wild Oasis</p></blockquote><h2 id="Application-Description"><a href="#Application-Description" class="headerlink" title="Application Description"></a>Application Description</h2><blockquote><p>The Wild Oasis is a web application that manages a hotel’s bookings,cabins,guests,and settings.</p></blockquote><h2 id="Plan"><a href="#Plan" class="headerlink" title="Plan"></a>Plan</h2><ol><li>Gather application requirements and features<ol><li><ul><li><input checked="" disabled="" type="checkbox"> Users of app are hotel employees.They need to be logged into application to perform tasks.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> New users can only be signed up inside the application.(to guarantedd that only actual hotel employees can get accounts)</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Users should be to upload an avatar and change their name and password.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> App needs a table view with all cabins,showing the cabin photo,name,capacity,price and current discount.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Users should be able to update or delete cabin,and create new cabins(including uploading a photo)</li></ul></li><li><ul><li><input disabled="" type="checkbox"> App needs a table view all bookings,showing arrival and departure dates,status,and paid amount,as well as cabin and guest data.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> The booking status can be “unconfirmed(booked but not yet checked in)”,”checked in”,or “checked out”.The table should be fiterable by this important status.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Other booking data includes:number of guests,number of nights,guest observations,whether they booked breakfast,breakfast price.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Users should be able delete,check in,or check out a booking as guest arrives(no editing necessary for now).</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Bookings may not have been paid yet on guest arrival.Therefore, on check in,users need to accept payment (ouside the app ),and then confirm that payment has been received(inside the app).</li></ul></li><li><ul><li><input disabled="" type="checkbox"> On check in,the guest should have the ability to add breakfast for the entire stay,if they hadn’t already.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> Guests data should contain:full name,email,national ID,nationality,and country flag for esay identification.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> The initial app screen should be a dashboard,to display important information for last 7,30,or 90 days.<ul><li><input disabled="" type="checkbox"> A list of guests checking in and out on the current day.Users should be able to perform these tasks from here </li><li><input disabled="" type="checkbox"> Statistics on recent bookings,sales,check ins and occupancy rate.</li><li><input disabled="" type="checkbox"> A chart showing all daily hotel sales,showing both “total” sales and “extras” sales(only breakfast at the moment).</li><li><input disabled="" type="checkbox"> A chart showing statistics on stay durations, as  this is an important metric for the hotel.</li></ul></li></ul></li><li><ul><li><input disabled="" type="checkbox"> Users should be able to define a few application-wide settings:breakfast price,min and max nights&#x2F;booking,max guests&#x2F;booking&#x2F;.</li></ul></li><li><ul><li><input disabled="" type="checkbox"> App needs a dark mode.</li></ul></li></ol></li><li>Divide the application into pages</li><li>Divide the pages into feature categories<table><thead><tr><th>Features</th><th>Pages</th><th>URI</th></tr></thead><tbody><tr><td>Bookings</td><td>Bookings</td><td>&#x2F;bookings</td></tr><tr><td>Cabins</td><td>Cabins</td><td>&#x2F;cabins</td></tr><tr><td>Guests</td><td>NULL</td><td>NULL</td></tr><tr><td>Dashboard</td><td>Dasboard</td><td>&#x2F;dashboard</td></tr><tr><td>Check in and Check out</td><td>Booking check in</td><td>&#x2F;checkin&#x2F;:bookingID</td></tr><tr><td>App settings</td><td>App settings</td><td>&#x2F;settings</td></tr><tr><td>Authentication</td><td>User sign up</td><td>&#x2F;users</td></tr><tr><td>Authentication</td><td>Login</td><td>&#x2F;login</td></tr><tr><td>Authentication</td><td>Account settings</td><td>&#x2F;account</td></tr></tbody></table></li><li>Decide on what libraries and tools to use<table><thead><tr><th>*</th><th>Tool</th></tr></thead><tbody><tr><td>Routing</td><td>React Router</td></tr><tr><td>styling</td><td>styled components</td></tr><tr><td>Remote state management</td><td>React Query</td></tr><tr><td>UI State management</td><td>context API</td></tr><tr><td>Form management</td><td>React Hook Form</td></tr><tr><td>Others</td><td>React icons &#x2F; React hot toast &#x2F; Recharts &#x2F; date-fns &#x2F; Supabase</td></tr></tbody></table></li></ol>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frontend </tag>
            
            <tag> react </tag>
            
            <tag> website </tag>
            
            <tag> The Wild Oasis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design_Patterns _Adapter_Pattern</title>
      <link href="//2023/09/05/Design_Patterns%20_Adapter_Pattern/"/>
      <url>//2023/09/05/Design_Patterns%20_Adapter_Pattern/</url>
      
        <content type="html"><![CDATA[<h1 id="Adapter-Pattern"><a href="#Adapter-Pattern" class="headerlink" title="Adapter Pattern"></a>Adapter Pattern</h1><h2 id="defination"><a href="#defination" class="headerlink" title="defination"></a>defination</h2><pre><code>dapter pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as this pattern combines the capability of two independent interfaces.</code></pre><h3 id="Two-ways-to-implement-Adapter-Pattern"><a href="#Two-ways-to-implement-Adapter-Pattern" class="headerlink" title="Two ways to implement Adapter Pattern"></a>Two ways to implement Adapter Pattern</h3><ol><li>composition (better)<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">specificRequest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Adaptee&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">implements</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$adaptee</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Adaptee <span class="variable">$adaptee</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;adaptee = <span class="variable">$adaptee</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;adaptee-&gt;<span class="title function_ invoke__">specificRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adaptee</span> = <span class="keyword">new</span> <span class="title class_">Adaptee</span>();</span><br><span class="line"><span class="variable">$adapter</span> = <span class="keyword">new</span> <span class="title class_">Adapter</span>(<span class="variable">$adaptee</span>);</span><br><span class="line"><span class="variable">$adapter</span>-&gt;<span class="title function_ invoke__">request</span>();</span><br></pre></td></tr></table></figure><ol start="2"><li>extends<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">specificRequest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Adaptee&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">extends</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">specificRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adapter</span> = <span class="keyword">new</span> <span class="title class_">Adapter</span>();</span><br><span class="line"><span class="variable">$adapter</span>-&gt;<span class="title function_ invoke__">request</span>();</span><br></pre></td></tr></table></figure><h1 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h1><h1 id="advantages"><a href="#advantages" class="headerlink" title="advantages"></a>advantages</h1><ol><li>More flexibility than static inheritance</li></ol><h1 id="disadvantages"><a href="#disadvantages" class="headerlink" title="disadvantages"></a>disadvantages</h1><ol><li>All requests are forwarded, so there is a slight increase in overhead.</li><li>Sometimes many adaptations are required along an adapter chain to reach the type which is required.</li><li>Can be difficult to override behavior of adaptee.</li><li>Can lead to the creation of a lot of small classes.</li><li>Can lead to the system becoming very complicated.</li><li>Can be difficult to debug.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Design_Patterns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design_Patterns _Decorator_Pattern</title>
      <link href="//2023/09/01/Design_Patterns%20_Decorator_Pattern/"/>
      <url>//2023/09/01/Design_Patterns%20_Decorator_Pattern/</url>
      
        <content type="html"><![CDATA[<h1 id="Decorator-Pattern"><a href="#Decorator-Pattern" class="headerlink" title="Decorator Pattern"></a>Decorator Pattern</h1><h2 id="defination"><a href="#defination" class="headerlink" title="defination"></a>defination</h2><p>Decorator pattern allows a user to add new functionality to an <strong>existing object</strong> without altering its structure. This type of design pattern comes under structural pattern as this pattern acts as a wrapper to existing class.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteComponent</span> <span class="keyword">implements</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ConcreteComponent&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Decorator</span> <span class="keyword">implements</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$component</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Component <span class="variable">$component</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;component = <span class="variable">$component</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;component-&gt;<span class="title function_ invoke__">operation</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteDecoratorA</span> <span class="keyword">extends</span> <span class="title">Decorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">operation</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ConcreteDecoratorA&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteDecoratorB</span> <span class="keyword">extends</span> <span class="title">Decorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">operation</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ConcreteDecoratorB&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$component</span> = <span class="keyword">new</span> <span class="title class_">ConcreteComponent</span>();<span class="comment">// ConcreteComponent</span></span><br><span class="line"><span class="variable">$decoratorA</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ConcreteDecoratorA</span>(<span class="variable">$component</span>); <span class="comment">// ConcreteComponentConcreteDecoratorA</span></span><br><span class="line"><span class="variable">$decoratorB</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ConcreteDecoratorB</span>(<span class="variable">$decoratorA</span>);<span class="comment">// ConcreteComponentConcreteDecoratorAConcreteDecoratorB</span></span><br><span class="line"><span class="variable">$decoratorB</span>-&gt;<span class="title function_ invoke__">operation</span>();</span><br></pre></td></tr></table></figure><h2 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h2><h2 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a>Advantages</h2><ol><li>More flexibility than static inheritance</li><li>Avoids feature-laden classes high up in the hierarchy</li><li>A decorator and its component aren’t identical</li><li>Lots of little objects</li></ol><h2 id="Disadvantages"><a href="#Disadvantages" class="headerlink" title="Disadvantages"></a>Disadvantages</h2><ol><li>Many little objects</li><li>Often confused with simple inheritance</li><li>Overkill for adding a single responsibility</li><li>Multiple little objects</li></ol>]]></content>
      
      
      <categories>
          
          <category> Design_Patterns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design_Patterns Abstract Factory Pattern</title>
      <link href="//2023/08/31/Design_Patterns_Abstract%20_Factory_Pattern%20/"/>
      <url>//2023/08/31/Design_Patterns_Abstract%20_Factory_Pattern%20/</url>
      
        <content type="html"><![CDATA[<h1 id="Abstract-Factory-Pattern"><a href="#Abstract-Factory-Pattern" class="headerlink" title="Abstract Factory Pattern"></a>Abstract Factory Pattern</h1><h2 id="Defination"><a href="#Defination" class="headerlink" title="Defination"></a>Defination</h2><p>Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.</p><p>Provides for creating <strong><font color="#dd0000">a series</font></strong> of related or interdependent interfaces without specifying their concrete classes</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AbstractProductA</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">AbstractProductA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductA1</span> <span class="keyword">implements</span> <span class="title">AbstractProductA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ProductA1&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductA2</span> <span class="keyword">implements</span> <span class="title">AbstractProductA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ProductA2&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AbstractProductB</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">AbstractProductB</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductB1</span> <span class="keyword">implements</span> <span class="title">AbstractProductB</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ProductB1&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductB2</span> <span class="keyword">implements</span> <span class="title">AbstractProductB</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;ProductB2&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AbstractFactory</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductA</span>(<span class="params"></span>):<span class="title">AbstractProductA</span></span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductB</span>(<span class="params"></span>):<span class="title">AbstractProductB</span></span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operationA</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createProductA</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operationB</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createProductB</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Factory1</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductA</span>(<span class="params"></span>):<span class="title">AbstractProductA</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ProductA1</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductB</span>(<span class="params"></span>):<span class="title">AbstractProductB</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ProductB1</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Factory2</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductA</span>(<span class="params"></span>):<span class="title">AbstractProductA</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ProductA2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createProductB</span>(<span class="params"></span>):<span class="title">AbstractProductB</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ProductB2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//client</span></span><br><span class="line"><span class="variable">$factory1</span>=<span class="keyword">new</span> <span class="title class_">Factory1</span>();</span><br><span class="line"><span class="variable">$factory1</span>-&gt;<span class="title function_ invoke__">operationA</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$factory1</span>-&gt;<span class="title function_ invoke__">operationB</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$factory2</span>=<span class="keyword">new</span> <span class="title class_">Factory2</span>();</span><br><span class="line"><span class="variable">$factory2</span>-&gt;<span class="title function_ invoke__">operationA</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$factory2</span>-&gt;<span class="title function_ invoke__">operationB</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br></pre></td></tr></table></figure><h2 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h2><p><img src="https://files.catbox.moe/63kcrv.png"></p><h2 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a>Advantages</h2><ul><li><strong><font color="#dd0000">Easy to change</font></strong> the concrete classes of objects created or to change the system of objects created</li><li><strong><font color="#dd0000">Easy to add</font></strong> objects to the system</li><li><strong><font color="#dd0000">Easy to add</font></strong> families of related objects to the system</li><li><strong><font color="#dd0000">Encapsulates</font></strong> the responsibility of object creation</li><li><strong><font color="#dd0000">Promotes consistency</font></strong> among objects</li><li><strong><font color="#dd0000">Supports</font></strong> principles of dependency inversion (dependency injection)</li></ul><h2 id="Disadvantages"><a href="#Disadvantages" class="headerlink" title="Disadvantages"></a>Disadvantages</h2><ul><li><strong><font color="#dd0000">Difficult to add</font></strong> new kinds of products</li><li><strong><font color="#dd0000">Difficult to support</font></strong> new kinds of products</li><li><strong><font color="#dd0000">Difficult to support</font></strong> new kinds of factories</li><li><strong><font color="#dd0000">Difficult to support</font></strong> new families of products</li><li><strong><font color="#dd0000">Difficult to support</font></strong> new families of factories</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><ul><li>The abstract factory pattern is a good choice when you need to create a series of related or interdependent objects without specifying their concrete classes.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Design_Patterns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx03-events</title>
      <link href="//2023/08/30/nginx03-events/"/>
      <url>//2023/08/30/nginx03-events/</url>
      
        <content type="html"><![CDATA[<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">  <span class="comment"># use epoll; | IN Linux use epoll in FreeBsd use kqueue  donnot point it .</span></span><br><span class="line">  <span class="comment">#worker_aio_requests number; | I dno&#x27;t know</span></span><br><span class="line"><span class="attribute">worker_connections</span> <span class="number">51200</span>; <span class="comment"># max connection number less than worker_rlimit_nfile if get &quot;Too many open files&quot; Check ulimit, worker_rlimit_nofile,and worker_connection</span></span><br><span class="line">  <span class="comment"># accept_mutex on |off;</span></span><br><span class="line">  <span class="comment"># accept_mutex_delay time;</span></span><br><span class="line"><span class="comment"># multi_accept on;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Normal"><a href="#Normal" class="headerlink" title="Normal"></a>Normal</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">events&#123;</span><br><span class="line">  use epoll;</span><br><span class="line">  worker_connections 51200;</span><br><span class="line">  multi_accept on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> website </tag>
            
            <tag> nginx </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design_Patterns Factory Pattern</title>
      <link href="//2023/08/29/Design_Patterns_Factory_Pattern/"/>
      <url>//2023/08/29/Design_Patterns_Factory_Pattern/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>Definition</strong><ul><li>Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Product</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Factory</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span></span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"></span>):<span class="title">Product</span></span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">create</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"></span>):<span class="title">Product</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"></span>):<span class="title">Product</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Client</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">AFactory</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">operation</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">BFactory</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;<span class="title function_ invoke__">operation</span>()-&gt;<span class="title function_ invoke__">show</span>();</span><br></pre></td></tr></table></figure><ul><li><p><strong>UML</strong></p></li><li><p><strong>good</strong></p><ul><li>The factory method pattern is a good choice when you need to create an object with some logic involved, and you don’t know the exact type and dependencies of the object until runtime.</li><li>The factory method pattern isolates the client from knowing which concrete classes it is using. This is useful, for example, when the client doesn’t know ahead of time all of the types of objects it needs to create.</li><li>The factory method pattern allows subclasses to choose which type of object to create.</li><li>The factory method pattern allows a class to defer instantiation to subclasses.</li></ul></li><li><p><strong>bad</strong></p><ul><li>The factory method pattern can lead to a system with too many factories and too many concrete products. This is a problem when you are trying to maintain the system, because you may need to instantiate a lot of objects in order to perform a simple task.</li><li>The factory method pattern can also lead to a system with too many classes. This is a problem when you are trying to maintain the system, because you may need to look through a lot of classes to understand what happens when a factory method is called.</li><li>The factory method pattern can also lead to a system with too many subclasses. This is a problem when you are trying to maintain the system, because you may need to create a lot of subclasses to implement a simple task.</li><li>The factory method pattern can also lead to a system with classes that have too many responsibilities. This is a problem when you are trying to maintain the system, because you may need to change a lot of classes to implement a simple task.</li></ul></li><li><p><strong>usage</strong></p><ul><li>The factory method pattern is a good choice when you need to create an object with some logic involved, and you don’t know the exact type and dependencies of the object until runtime.</li><li>The factory method pattern is a good choice when you want to isolate the client from knowing which concrete classes it is using.</li><li>The factory method pattern is a good choice when you want to allow subclasses to choose which type of object to create.</li><li>The factory method pattern is a good choice when you want to allow a class to defer instantiation to subclasses.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Design_Patterns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design_Patterns Simple Factory Pattern</title>
      <link href="//2023/08/29/Design_Patterns_Simple_Factory_Pattern/"/>
      <url>//2023/08/29/Design_Patterns_Simple_Factory_Pattern/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Factory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$type</span></span>):<span class="title">Product</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="variable">$product</span>=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Product</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">Product</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Client</span></span><br><span class="line"><span class="variable">$a</span>=<span class="title class_">Factory</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="title class_">Factory</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br></pre></td></tr></table></figure><p><img src="https://files.catbox.moe/jji93c.png"></p><center>UML</center><ul><li>good<ul><li>easy to add new product</li></ul></li><li>bad<ul><li>violate open close principle<font color="#dd0000">*</font></li><li>violate single responsibility principle</li><li>violate dependency inversion principle</li></ul></li><li>use<ul><li>The factory class is responsible for creating fewer objects, which does not make the business logic in the factory method too complex.</li><li>The client only knows the parameters passed into the factory class and does not care how the object is created.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Design_Patterns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="//2023/08/29/git/"/>
      <url>//2023/08/29/git/</url>
      
        <content type="html"><![CDATA[<blockquote><p>work area -&gt; stage area -&gt; local repo -&gt; remote repo</p></blockquote><blockquote><p>from work area to stage area use git add</p></blockquote><blockquote><p>from stage area to local repo use git commit</p></blockquote><blockquote><p>from local repo to remote repo use git push</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git init #init </span><br><span class="line">git add . #add file to stage</span><br><span class="line">git commit -m &quot;message&quot; #commit to local repo</span><br><span class="line"></span><br><span class="line">##if want to reset to last commit</span><br><span class="line">#before add file to stage</span><br><span class="line">git checkout &lt;filename&gt; #discard changes</span><br><span class="line">#after add file to stage</span><br><span class="line">git reset  HEAD^ #reset to last commit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## create branch</span><br><span class="line">git branch &lt;branchname&gt; #create branch from current branch</span><br><span class="line">git checkout &lt;branchname&gt; #switch to branch</span><br><span class="line">git checkout -b &lt;branchname&gt; #create and switch to branch</span><br><span class="line">git branch -D &lt;branchname&gt; #force delete branch</span><br><span class="line"></span><br><span class="line">## merge branch</span><br><span class="line">git merge &lt;branchname&gt; #merge branch to current branch</span><br><span class="line">git merge --abort #abort merge when conflict</span><br><span class="line"></span><br><span class="line">git cherry-pick &lt;commitid&gt; #pick a commit  to current branch</span><br><span class="line"></span><br><span class="line">push to remote repo</span><br><span class="line">git remote add origin &lt;url&gt; #add remote repo</span><br><span class="line">git push -u origin master #push to remote repo</span><br><span class="line"></span><br><span class="line">## pull from remote repo</span><br><span class="line">git pull origin master #pull from remote repo</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css-flex</title>
      <link href="//2023/08/28/Css-Flex/"/>
      <url>//2023/08/28/Css-Flex/</url>
      
        <content type="html"><![CDATA[<h1 id="Css-flex"><a href="#Css-flex" class="headerlink" title="Css-flex"></a>Css-flex</h1><p><img src="https://pic4.zhimg.com/v2-54a0fc96ef4f455aefb8ee4bc133291b_r.jpg" alt="css-flex"></p><h1 id="usage-of-container"><a href="#usage-of-container" class="headerlink" title="usage of container"></a>usage of container</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="flex-direction-use-to-define-the-main-axis-direction"><a href="#flex-direction-use-to-define-the-main-axis-direction" class="headerlink" title="flex-direction: use to define the main axis direction"></a>flex-direction: use to define the main axis direction</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br></pre></td></tr></table></figure><ol><li>default: row main axis: horizontal start from left to right<br><img src="https://pic2.zhimg.com/v2-ae8828b8b022dc6f1b28d5b4f7082e91_r.jpg"></li><li>row-reverse: main axis: horizontal start from right to left<br><img src="https://pic3.zhimg.com/v2-215c8626ac95e97834eddb552cfa148a_r.jpg"></li><li>column: main axis: vertical start from top to bottom<br><img src="https://pic1.zhimg.com/v2-33efe75d166a47588e0174d0830eb020_r.jpg"></li><li>column-reverse: main axis: vertical start from bottom to top<br><img src="https://pic2.zhimg.com/v2-344757e0fb7eee11e75b127b8485e679_r.jpg"></li></ol><h1 id="flex-wrap：use-to-define-is-wrap-or-not"><a href="#flex-wrap：use-to-define-is-wrap-or-not" class="headerlink" title="flex-wrap：use to define is wrap or not"></a>flex-wrap：use to define is wrap or not</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br></pre></td></tr></table></figure><ol><li>default: nowrap: all items in one line<br><img src="https://pic4.zhimg.com/v2-a590927ad6d83de8840d52a0cf2f0df3_r.jpg"></li><li>wrap: wrap: items in multiple lines<br><img src="https://pic2.zhimg.com/v2-426949b061e8179aab00cacda8168651_r.jpg"></li><li>wrap-reverse: wrap-reverse: items in multiple lines, but start from bottom to top<br><img src="https://pic2.zhimg.com/v2-91c53ebf744814e1ab60267643866439_r.jpg"></li></ol><h1 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: &lt;‘flex-direction’&gt; || &lt;‘flex-wrap’&gt;;</span><br></pre></td></tr></table></figure><p>is a shorthand for the <code>flex-direction</code> and <code>flex-wrap</code> properties, which together define the flex container’s main and cross axes. The default value is <code>row nowrap</code>.</p><h1 id="justify-content-use-to-define-the-main-axis-alignment"><a href="#justify-content-use-to-define-the-main-axis-alignment" class="headerlink" title="justify-content: use to define the main axis alignment"></a>justify-content: use to define the main axis alignment</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br></pre></td></tr></table></figure><ol><li>default: flex-start: items align to the start line<br><img src="https://pic1.zhimg.com/v2-1bafab80044a7ab2a6198d5937172eb0_r.jpg"></li><li>flex-end: items align to the end line<br><img src="https://pic3.zhimg.com/v2-8b163809a4c944486a127a7c22eee7b2_r.jpg"></li><li>center: items align to the center<br><img src="https://pic4.zhimg.com/v2-dea82c75d35f532d35a52d1f9c1c762b_r.jpg"></li><li>space-between: items display with equal space between them<br><img src="https://pic1.zhimg.com/v2-ea4061e0f64dd8d7a1fcb5b0ad6f96a8_r.jpg"></li><li>space-around: items display with equal space around them<br><img src="https://pic1.zhimg.com/v2-42a358111a221ff52768bdd55238eb0c_r.jpg"></li></ol><h1 id="align-items-use-to-define-the-cross-axis-alignment-when-there-is-only-one-line"><a href="#align-items-use-to-define-the-cross-axis-alignment-when-there-is-only-one-line" class="headerlink" title="align-items: use to define the cross axis alignment when there is only one line"></a>align-items: use to define the cross axis alignment when there is only one line</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br></pre></td></tr></table></figure><ol><li>default: stretch: stretch to fill the container<br><img src="https://pic2.zhimg.com/v2-0cced8789b0d73edf0844aaa3a08926d_r.jpg"></li><li>flex-start: items align to the start line<br><img src="https://pic3.zhimg.com/v2-26d9e85039beedd78e412459bd436e8a_r.jpg"></li><li>flex-end: items align to the end line<br><img src="https://pic4.zhimg.com/v2-8b65ee47605a48ad2947b9ef4e4b01b3_r.jpg"></li><li>center: items align to the center<br><img src="https://pic3.zhimg.com/v2-7bb9d8385273d8ad469605480f40f8f2_r.jpg"></li><li>baseline: items align to the baseline of text of the first item<br><img src="https://pic3.zhimg.com/v2-abf7ac4776302ad078986f7cd0dddaee_r.jpg"></li></ol><h1 id="align-content-use-to-define-the-cross-axis-alignment-when-there-are-multiple-lines"><a href="#align-content-use-to-define-the-cross-axis-alignment-when-there-are-multiple-lines" class="headerlink" title="align-content: use to define the cross axis alignment when there are multiple lines"></a>align-content: use to define the cross axis alignment when there are multiple lines</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around |</span><br><span class="line">  stretch;</span><br></pre></td></tr></table></figure><ol><li>default: stretch: stretch to fill the container<br><img src="https://pic3.zhimg.com/v2-2d5feceece695fb84fd650fc49164bd6_r.jpg"></li><li>flex-start: items align to the start line<br><img src="https://pic2.zhimg.com/v2-61d92d7dc68e3d7d415a16830050fd11_r.jpg"></li><li>flex-end: items align to the end line<br><img src="https://pic2.zhimg.com/v2-0a0a7f10c50596aade787ae11b7b0a75_r.jpg"></li><li>center: items align to the center<br><img src="https://pic1.zhimg.com/v2-dcf53fce8dbcde7da9c677dd1a033860_r.jpg"></li><li>space-between: items display with equal space between them<br><img src="https://pic2.zhimg.com/v2-d80940f71e1e08d45d3d6df4c5401d0d_r.jpg"></li><li>space-around: items display with equal space around them<br><img src="https://pic2.zhimg.com/v2-7c4d5c01f3851a3cec7f8487c6edb21d_r.jpg"></li></ol><h2 id="usage-of-item"><a href="#usage-of-item" class="headerlink" title="usage of item"></a>usage of item</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controls the order in which they appear in the flex container. The default value is 0.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">  <span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">  <span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-01</title>
      <link href="//2023/08/28/docker-01/"/>
      <url>//2023/08/28/docker-01/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx02-core</title>
      <link href="//2023/08/28/nginx02-core/"/>
      <url>//2023/08/28/nginx02-core/</url>
      
        <content type="html"><![CDATA[<ol><li>command in config</li></ol><ul><li>use nginx -t get conf file path</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> www-data; <span class="comment"># To define which user run work process &quot;user user [group]&quot;</span></span><br><span class="line"><span class="attribute">worker_processes</span> auto; <span class="comment"># To manager process number Suggestion: same or less than  cpu number or auto &quot;worker_processes number | auto&quot;</span></span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> <span class="number">0001</span> <span class="comment"># To define which cpu to work only support binary &quot;worker_cpu_affinity 0001 0100&quot;</span></span><br><span class="line">worker_priority -<span class="number">10</span>; <span class="comment">#point nginx priority from -20 to 20 The priority is higher when number is smaller &quot;worker_priority number&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># working_directory directory; ||The file path to record core erroe log</span></span><br><span class="line"><span class="comment"># worker_rlimit_core size; || core logs size</span></span><br><span class="line"><span class="comment"># worker_rlimit_nofile number || The number of each worker process to create connect</span></span><br><span class="line"><span class="comment"># worker_shutdown_timeout time; || Set time of process shut down; nginx -s reoload -&gt; each process grace shut down.if time is more than this time.the process will shut down.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DBUG (Cannot use reload Only restart)</span></span><br><span class="line"><span class="attribute">daemon</span> <span class="literal">on</span>|<span class="literal">off</span>;  <span class="comment"># default  on if define on.when use nginx in cmd will not get output.</span></span><br><span class="line"><span class="attribute">debug_points</span> abort|stop; <span class="comment"># debug checkpoint.</span></span><br><span class="line"><span class="attribute">master_process</span> <span class="literal">on</span>|<span class="literal">off</span> <span class="comment"># to turn on|off worker processes</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">error_log logs/<span class="literal">error</span>.log;</span><br><span class="line"><span class="attribute">error_log</span> logs/<span class="literal">error</span>.log; notice;</span><br><span class="line"><span class="attribute">error_log</span> logs/<span class="literal">error</span>.log <span class="literal">info</span>;</span><br><span class="line"><span class="comment"># error_log file [level] level including debug,info,notice,warn,error,crit,alert,emerg.The log file will in nginx working directory. [/usr/local/nginx/] Can know BY nginx -V --prefix=xxx</span></span><br><span class="line"><span class="attribute">include</span> mime.types;<span class="comment">#include other files &quot;include file|mask;&quot;</span></span><br><span class="line"><span class="attribute">load_module</span> file;<span class="comment"># To load extension module</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="attribute">lock_file</span> file;<span class="comment">#Mutual exclusion locker</span></span><br><span class="line"><span class="attribute">pcre_jit</span> <span class="literal">on</span> |<span class="literal">off</span>;</span><br><span class="line"><span class="attribute">pid</span> file;</span><br><span class="line"><span class="attribute">ssl_engine</span> device;</span><br><span class="line"><span class="attribute">thread_pool</span> default threads=<span class="number">32</span> max_queue=<span class="number">65536</span>;</span><br><span class="line"><span class="attribute">timer_resolution</span> interval;</span><br><span class="line"><span class="attribute">env</span> variable[=value]</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><ol start="2"><li>unit</li></ol><table><thead><tr><th align="left">Unit</th><th align="right">Description</th></tr></thead><tbody><tr><td align="left">ms</td><td align="right">millisecond</td></tr><tr><td align="left">s</td><td align="right">seconds</td></tr><tr><td align="left">m</td><td align="right">minute</td></tr><tr><td align="left">h</td><td align="right">hours</td></tr><tr><td align="left">d</td><td align="right">day</td></tr><tr><td align="left">w</td><td align="right">week</td></tr><tr><td align="left">M</td><td align="right">month 30 days</td></tr><tr><td align="left">y</td><td align="right">year 365 days</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> website </tag>
            
            <tag> nginx </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx05-http-server</title>
      <link href="//2023/08/28/nginx05-http-server%20/"/>
      <url>//2023/08/28/nginx05-http-server%20/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx05-http-server"><a href="#nginx05-http-server" class="headerlink" title="nginx05-http-server"></a>nginx05-http-server</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>; <span class="comment"># listen port</span></span><br><span class="line">    <span class="attribute">server_name</span> localhost; <span class="comment"># server name [core.http 192.168.56.58 http.* localhost; ]</span></span><br><span class="line">    <span class="attribute">server_name</span> ~^(www\.)?(?&lt;domain&gt;.+)$; <span class="comment"># regex server name</span></span><br><span class="line">    <span class="attribute">root</span> /usr/local/nginx/html;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="section">location</span> /t2/ &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">200</span> <span class="variable">$1</span><span class="variable">$domain</span>;<span class="comment">#$1=www [(www\.)] $domain=xxx.com[(?&lt;domain&gt;.+)]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> website </tag>
            
            <tag> nginx </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx01-cmd params</title>
      <link href="//2023/08/27/nginx01-Command%20Params/"/>
      <url>//2023/08/27/nginx01-Command%20Params/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-CMD-params"><a href="#Nginx-CMD-params" class="headerlink" title="Nginx CMD params"></a>Nginx CMD params</h1><ol><li>start</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><ol start="2"><li>get all help</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -h</span><br></pre></td></tr></table></figure><ol start="3"><li>get simple version number</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><ol start="4"><li>Get full infomation including where is conf file</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><ol start="5"><li>Check conf file and get conf filepath</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><ol start="6"><li>check conf file and print all conf</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -T</span><br></pre></td></tr></table></figure><ol start="7"><li>stop &amp;&amp; reload</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop # shutdown</span><br><span class="line">nginx -s quit # graceful shutdown</span><br><span class="line">nginx -s reload # reload configure file</span><br><span class="line">nginx -s reopen # reopen configure file</span><br></pre></td></tr></table></figure><ol start="8"><li>linux cmmmand</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kill -TERM 667 #shut down =nginx -s stop</span><br><span class="line">kill -INT 667 #shut down =nginx -s stop</span><br><span class="line">KILL -HUP # reload conf = nginx -s reload</span><br><span class="line">KILL -USR1 #reopen conf =nginx -s reopen</span><br><span class="line">KILL -USR2 # smooth upgrade smooth instead nginx</span><br><span class="line">KILL -WINCH # smooth close</span><br></pre></td></tr></table></figure><ol start="9"><li>write error log to specification file</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -e &lt;filename&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> website </tag>
            
            <tag> nginx </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx01-http</title>
      <link href="//2023/08/27/nginx04-http/"/>
      <url>//2023/08/27/nginx04-http/</url>
      
        <content type="html"><![CDATA[<h1 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Basic Settings</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="attribute">include</span>   mime.types;</span><br><span class="line">    default-<span class="attribute">type</span> application/octet-stream;</span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">65</span>;</span><br><span class="line">    server&#123;</span><br><span class="line">      <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">      <span class="attribute">server_name</span> localhost;</span><br><span class="line">      <span class="section">location</span> /&#123;</span><br><span class="line">        <span class="attribute">root</span> html;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">      <span class="section">location</span> = /50x.html&#123; </span><br><span class="line">        <span class="attribute">root</span> html;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="section">location</span> /t1&#123;<span class="comment">#start with t1</span></span><br><span class="line">        <span class="attribute">return</span> <span class="number">200</span> <span class="string">&#x27;return test&#x27;</span>; <span class="comment"># 200[status code] &#x27;return test&#x27;[return value] Useful for debug </span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment"># connect to php</span></span><br><span class="line">      <span class="section">location</span> <span class="regexp">~ \.php$</span>&#123; <span class="comment">#end with .php ~means use regular expression</span></span><br><span class="line">        <span class="attribute">root</span> html;</span><br><span class="line">        <span class="comment">#fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment"># ||</span></span><br><span class="line">        <span class="attribute">fastcgi_pass</span> unix:/var/sock/php-fpm.sock;</span><br><span class="line">        <span class="comment"># find in /etc/php-fpm.d/www.conf [listen = /var/sockj/php-fpm.sock || listen=127.0.0.1:9000]</span></span><br><span class="line">        <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">        <span class="comment">#fastcgi_param SCRIPT_FILENAME /script$fastcgi_script_name; #absolute path fastcgi_script_name means full php path like index.php So means /script/1.php</span></span><br><span class="line">        <span class="comment"># ||</span></span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;<span class="comment">#document_root=root[html] So means /html/1.php</span></span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
            <tag> website </tag>
            
            <tag> nginx </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
